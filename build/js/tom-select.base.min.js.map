{"version":3,"file":"tom-select.base.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../node_modules/@orchidjs/sifter/lib/sifter.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts"],"sourcesContent":["/**\r\n * MicroEvent - to make any js object an event emitter\r\n *\r\n * - pure javascript - server compatible, browser compatible\r\n * - dont rely on the browser doms\r\n * - super simple - you get it immediatly, no mistery, no magic involved\r\n *\r\n * @author Jerome Etienne (https://github.com/jeromeetienne)\r\n */\r\n\r\ntype TCallback = (...args:any) => any;\r\n\r\n/**\r\n * Execute callback for each event in space separated list of event names\r\n *\r\n */\r\nfunction forEvents(events:string,callback:(event:string)=>any){\r\n\tevents.split(/\\s+/).forEach((event) =>{\r\n\t\tcallback(event);\r\n\t});\r\n}\r\n\r\nexport default class MicroEvent{\r\n\r\n\tpublic _events: {[key:string]:TCallback[]};\r\n\r\n\tconstructor(){\r\n\t\tthis._events = {};\r\n\t}\r\n\r\n\ton(events:string, fct:TCallback){\r\n\t\tforEvents(events,(event) => {\r\n\t\t\tthis._events[event] = this._events[event] || [];\r\n\t\t\tthis._events[event].push(fct);\r\n\t\t});\r\n\t}\r\n\r\n\toff(events:string, fct:TCallback){\r\n\t\tvar n = arguments.length;\r\n\t\tif( n === 0 ){\r\n\t\t\tthis._events = {};\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tforEvents(events,(event) => {\r\n\r\n\t\t\tif (n === 1) return delete this._events[event];\r\n\r\n\t\t\tif (event in this._events === false) return;\r\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\r\n\t\t});\r\n\t}\r\n\r\n\ttrigger(events:string, ...args:any){\r\n\t\tvar self = this;\r\n\r\n\t\tforEvents(events,(event) => {\r\n\t\t\tif(event in self._events === false) return;\r\n\t\t\tfor( let fct of self._events[event] ){\r\n\t\t\t\tfct.apply(self, args );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n","\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'g');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'g');\n\n\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\" \",\n\t0:\"߀\",\n\tA:\"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\",\n\tAA:\"Ꜳ\",\n\tAE:\"ÆǼǢ\",\n\tAO:\"Ꜵ\",\n\tAU:\"Ꜷ\",\n\tAV:\"ꜸꜺ\",\n\tAY:\"Ꜽ\",\n\tB:\"ⒷＢḂḄḆɃƁ\",\n\tC:\"ⒸＣꜾḈĆCĈĊČÇƇȻ\",\n\tD:\"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ\",\n\tDh:\"Ð\",\n\tDZ:\"ǱǄ\",\n\tDz:\"ǲǅ\",\n\tE:\"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ\",\n\tF:\"ꝼⒻＦḞƑꝻ\",\n\tG:\"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ\",\n\tH:\"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\",\n\tI:\"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\",\n\tJ:\"ⒿＪĴɈȷ\",\n\tK:\"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\",\n\tL:\"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\",\n\tLJ:\"Ǉ\",\n\tLj:\"ǈ\",\n\tM:\"ⓂＭḾṀṂⱮƜϻ\",\n\tN:\"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ\",\n\tNJ:\"Ǌ\",\n\tNj:\"ǋ\",\n\tO:\"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\",\n\tOE:\"Œ\",\n\tOI:\"Ƣ\",\n\tOO:\"Ꝏ\",\n\tOU:\"Ȣ\",\n\tP:\"ⓅＰṔṖƤⱣꝐꝒꝔ\",\n\tQ:\"ⓆＱꝖꝘɊ\",\n\tR:\"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ\",\n\tS:\"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\",\n\tT:\"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\",\n\tTh:\"Þ\",\n\tTZ:\"Ꜩ\",\n\tU:\"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\",\n\tV:\"ⓋＶṼṾƲꝞɅ\",\n\tVY:\"Ꝡ\",\n\tW:\"ⓌＷẀẂŴẆẄẈⱲ\",\n\tX:\"ⓍＸẊẌ\",\n\tY:\"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\",\n\tZ:\"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\",\n\ta:\"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ\",\n\taa:\"ꜳ\",\n\tae:\"æǽǣ\",\n\tao:\"ꜵ\",\n\tau:\"ꜷ\",\n\tav:\"ꜹꜻ\",\n\tay:\"ꜽ\",\n\tb:\"ⓑｂḃḅḇƀƃɓƂ\",\n\tc:\"ｃⓒćĉċčçḉƈȼꜿↄ\",\n\td:\"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ\",\n\tdh:\"ð\",\n\tdz:\"ǳǆ\",\n\te:\"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ\",\n\tf:\"ⓕｆḟƒ\",\n\tff:\"ﬀ\",\n\tfi:\"ﬁ\",\n\tfl:\"ﬂ\",\n\tffi:\"ﬃ\",\n\tffl:\"ﬄ\",\n\tg:\"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ\",\n\th:\"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\",\n\thv:\"ƕ\",\n\ti:\"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\",\n\tj:\"ⓙｊĵǰɉ\",\n\tk:\"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\",\n\tl:\"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ\",\n\tlj:\"ǉ\",\n\tm:\"ⓜｍḿṁṃɱɯ\",\n\tn:\"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ\",\n\tnj:\"ǌ\",\n\to:\"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ\",\n\toe:\"œ\",\n\toi:\"ƣ\",\n\too:\"ꝏ\",\n\tou:\"ȣ\",\n\tp:\"ⓟｐṕṗƥᵽꝑꝓꝕρ\",\n\tq:\"ⓠｑɋꝗꝙ\",\n\tr:\"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\",\n\ts:\"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ\",\n\tss:\"ß\",\n\tt:\"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\",\n\tth:\"þ\",\n\ttz:\"ꜩ\",\n\tu:\"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\",\n\tv:\"ⓥｖṽṿʋꝟʌ\",\n\tvy:\"ꝡ\",\n\tw:\"ⓦｗẁẃŵẇẅẘẉⱳ\",\n\tx:\"ⓧｘẋẍ\",\n\ty:\"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\",\n\tz:\"ⓩｚźẑżžẓẕƶȥɀⱬꝣ\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nexport const code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter];\n\t\t});\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n\tchar_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n\t\treturn accumulator;\n\t}, accumulator);\n\n}\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\t\n\tif( chars.length == 1 ){\n\t\treturn chars[0];\n\t}\n\t\n\tvar longest = 1;\n\tchars.forEach((a)=>{longest = Math.max(longest,a.length)});\n\n\tif( longest == 1 ){\n\t\treturn '['+chars.join('')+']';\n\t}\n\n\treturn '(?:'+chars.join(glue)+')';\t\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    \n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\t\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\t\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\n\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = [latin];\n\t\t\t}\n\t\t\t\n\t\t\tvar patt = new RegExp( arrayToPattern(diacritics[latin]),'iu');\n\t\t\tif( diacritic.match(patt) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tdiacritics[latin].push(diacritic);\n\t\t}\n\t});\n\t\t\n\tvar latin_chars = Object.keys(diacritics);\n\t\n\t\n\t// latin character pattern\n\t// match longer substrings first\n\tlatin_chars\t\t= latin_chars.sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ arrayToPattern(latin_chars) + accent_pat + '*)','g');\n\t\n\t\n\t// build diacritic patterns\n\t// ae needs: \n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\t\t\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\t\t\t\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn arrayToPattern(diacritics[l]);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\t\t\t\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\t\t\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\t\t\n\t});\n\t\t\t\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics();\n\t}\n\t\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\t\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\t\t\n\t\tif( part == '' ){\n\t\t\treturn '';\n\t\t}\n\t\t\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\t\t\t\t\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\t\t\n\t\t// 'أهلا' (\\u{623}\\u{647}\\u{644}\\u{627}) or 'أهلا' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\t\tconst composed_part = part.normalize('NFC');\n\t\tif( composed_part != part ){\n\t\t\treturn arrayToPattern([part,composed_part]);\n\t\t}\n\t\t\t\t\n\t\treturn part;\n\t}).join('');\n\t\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\t\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\t\n\tif( typeof value == 'function' ) return value;\n\t\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(regex);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\tif( typeof sort == 'function' ){\n\t\t\treturn sort.bind(this);\n\t\t}\t\t\t\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\tmultipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t} else if (sort_flds_count === 1) {\n\t\t\tconst sort_fld = sort_flds[0].field;\n\t\t\tconst multiplier = multipliers[0];\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(sort_fld, a),\n\t\t\t\t\tget_field(sort_fld, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\t\tfield = sort_flds[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:Partial<T.Options>):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","\r\nimport { iterate } from '@orchidjs/sifter/lib/utils';\r\n\r\n/**\r\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\r\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\r\n *\r\n * param query should be {}\r\n */\r\nexport const getDom = ( query:any ):HTMLElement => {\r\n\r\n\tif( query.jquery ){\r\n\t\treturn query[0];\r\n\t}\r\n\r\n\tif( query instanceof HTMLElement ){\r\n\t\treturn query;\r\n\t}\r\n\r\n\tif( query.indexOf('<') > -1 ){\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\r\n\t\treturn div.firstChild as HTMLElement;\r\n\t}\r\n\r\n\treturn document.querySelector(query);\r\n};\r\n\r\nexport const escapeQuery = (query:string):string => {\r\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Dispatch an event\r\n *\r\n */\r\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\r\n\tvar event = document.createEvent('HTMLEvents');\r\n\tevent.initEvent(event_name, true, false);\r\n\tdom_el.dispatchEvent(event)\r\n};\r\n\r\n/**\r\n * Apply CSS rules to a dom element\r\n *\r\n */\r\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\r\n\tObject.assign(dom_el.style, css);\r\n}\r\n\r\n\r\n/**\r\n * Add css classes\r\n *\r\n */\r\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n\tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map( cls => {\r\n\t\t\tel.classList.add( cls );\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Remove css classes\r\n *\r\n */\r\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n \tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map(cls => {\r\n\t \t\tel.classList.remove( cls );\r\n\t\t});\r\n \t});\r\n }\r\n\r\n\r\n/**\r\n * Return arguments\r\n *\r\n */\r\nexport const classesArray = (args:string[]|string[][]):string[] => {\r\n\tvar classes:string[] = [];\r\n\titerate( args, (_classes) =>{\r\n\t\tif( typeof _classes === 'string' ){\r\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\r\n\t\t}\r\n\t\tif( Array.isArray(_classes) ){\r\n\t\t\tclasses = classes.concat(_classes);\r\n\t\t}\r\n\t});\r\n\r\n\treturn classes.filter(Boolean);\r\n}\r\n\r\n\r\n/**\r\n * Create an array from arg if it's not already an array\r\n *\r\n */\r\nexport const castAsArray = (arg:any):Array<any> => {\r\n\tif( !Array.isArray(arg) ){\r\n \t\targ = [arg];\r\n \t}\r\n\treturn arg;\r\n}\r\n\r\n\r\n/**\r\n * Get the closest node to the evt.target matching the selector\r\n * Stops at wrapper\r\n *\r\n */\r\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\r\n\r\n\tif( wrapper && !wrapper.contains(target) ){\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile( target && target.matches ){\r\n\r\n\t\tif( target.matches(selector) ){\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\ttarget = target.parentNode as HTMLElement;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get the first or last item from an array\r\n *\r\n * > 0 - right (last)\r\n * <= 0 - left (first)\r\n *\r\n */\r\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\r\n\r\n\tif( direction > 0 ){\r\n\t\treturn list[list.length-1];\r\n\t}\r\n\r\n\treturn list[0];\r\n}\r\n\r\n/**\r\n * Return true if an object is empty\r\n *\r\n */\r\nexport const isEmptyObject = (obj:object):boolean => {\r\n\treturn (Object.keys(obj).length === 0);\r\n}\r\n\r\n\r\n/**\r\n * Get the index of an element amongst sibling nodes of the same type\r\n *\r\n */\r\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\r\n\tif (!el) return -1;\r\n\r\n\tamongst = amongst || el.nodeName;\r\n\r\n\tvar i = 0;\r\n\twhile( el = el.previousElementSibling ){\r\n\r\n\t\tif( el.matches(amongst) ){\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n\r\n/**\r\n * Set attributes of an element\r\n *\r\n */\r\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\r\n\titerate( attrs,(val,attr) => {\r\n\t\tif( val == null ){\r\n\t\t\tel.removeAttribute(attr as string);\r\n\t\t}else{\r\n\t\t\tel.setAttribute(attr as string, ''+val);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Replace a node\r\n */\r\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\r\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\r\n}\r\n","/**\r\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\r\n * Highlights arbitrary terms in a node.\r\n *\r\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\r\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\r\n */\r\n\r\nimport {replaceNode} from '../vanilla';\r\n\r\n\r\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\r\n\r\n\tif( regex === null ) return;\r\n\r\n\t// convet string to regex\r\n\tif( typeof regex === 'string' ){\r\n\r\n\t\tif( !regex.length ) return;\r\n\t\tregex = new RegExp(regex, 'i');\r\n\t}\r\n\r\n\r\n\t// Wrap matching part of text node with highlighting <span>, e.g.\r\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\r\n\tconst highlightText = ( node:Text ):number => {\r\n\r\n\t\tvar match = node.data.match(regex);\r\n\t\tif( match && node.data.length > 0 ){\r\n\t\t\tvar spannode\t\t= document.createElement('span');\r\n\t\t\tspannode.className\t= 'highlight';\r\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\r\n\r\n\t\t\tmiddlebit.splitText(match[0].length);\r\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\r\n\r\n\t\t\tspannode.appendChild(middleclone);\r\n\t\t\treplaceNode(middlebit, spannode);\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// Recurse element node, looking for child text nodes to highlight, unless element\r\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\r\n\tconst highlightChildren = ( node:Element ):void => {\r\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\r\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\r\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst highlightRecursive = ( node:Node|Element ):number => {\r\n\r\n\t\tif( node.nodeType === 3 ){\r\n\t\t\treturn highlightText(node as Text);\r\n\t\t}\r\n\r\n\t\thighlightChildren(node as Element);\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\thighlightRecursive( element );\r\n};\r\n\r\n/**\r\n * removeHighlight fn copied from highlight v5 and\r\n * edited to remove with(), pass js strict mode, and use without jquery\r\n */\r\nexport const removeHighlight = (el:HTMLElement) => {\r\n\tvar elements = el.querySelectorAll(\"span.highlight\");\r\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\r\n\t\tvar parent = el.parentNode as Node;\r\n\t\tparent.replaceChild(el.firstChild as Node, el);\r\n\t\tparent.normalize();\r\n\t});\r\n};\r\n","export const KEY_A\t\t\t\t= 65;\r\nexport const KEY_RETURN\t\t\t= 13;\r\nexport const KEY_ESC\t\t\t= 27;\r\nexport const KEY_LEFT\t\t\t= 37;\r\nexport const KEY_UP\t\t\t\t= 38;\r\nexport const KEY_RIGHT\t\t\t= 39;\r\nexport const KEY_DOWN\t\t\t= 40;\r\nexport const KEY_BACKSPACE\t\t= 8;\r\nexport const KEY_DELETE\t\t\t= 46;\r\nexport const KEY_TAB\t\t\t= 9;\r\n\r\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\r\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\r\n","\r\nexport default {\r\n\toptions: [],\r\n\toptgroups: [],\r\n\r\n\tplugins: [],\r\n\tdelimiter: ',',\r\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\r\n\tpersist: true,\r\n\tdiacritics: true,\r\n\tcreate: null,\r\n\tcreateOnBlur: false,\r\n\tcreateFilter: null,\r\n\thighlight: true,\r\n\topenOnFocus: true,\r\n\tshouldOpen: null,\r\n\tmaxOptions: 50,\r\n\tmaxItems: null,\r\n\thideSelected: null,\r\n\tduplicates: false,\r\n\taddPrecedence: false,\r\n\tselectOnTab: false,\r\n\tpreload: null,\r\n\tallowEmptyOption: false,\r\n\t//closeAfterSelect: false,\r\n\r\n\tloadThrottle: 300,\r\n\tloadingClass: 'loading',\r\n\r\n\tdataAttr: null, //'data-data',\r\n\toptgroupField: 'optgroup',\r\n\tvalueField: 'value',\r\n\tlabelField: 'text',\r\n\tdisabledField: 'disabled',\r\n\toptgroupLabelField: 'label',\r\n\toptgroupValueField: 'value',\r\n\tlockOptgroupOrder: false,\r\n\r\n\tsortField: '$order',\r\n\tsearchField: ['text'],\r\n\tsearchConjunction: 'and',\r\n\r\n\tmode: null,\r\n\twrapperClass: 'ts-wrapper',\r\n\tcontrolClass: 'ts-control',\r\n\tdropdownClass: 'ts-dropdown',\r\n\tdropdownContentClass: 'ts-dropdown-content',\r\n\titemClass: 'item',\r\n\toptionClass: 'option',\r\n\r\n\tdropdownParent: null,\r\n\t//controlInput: null,\r\n\r\n\tcopyClassesToDropdown: false,\r\n\r\n\tplaceholder: null,\r\n\thidePlaceholder: null,\r\n\r\n\tshouldLoad: function(query:string):boolean{\r\n\t\treturn query.length > 0;\r\n\t},\r\n\r\n\t/*\r\n\tload                 : null, // function(query, callback) { ... }\r\n\tscore                : null, // function(search) { ... }\r\n\tonInitialize         : null, // function() { ... }\r\n\tonChange             : null, // function(value) { ... }\r\n\tonItemAdd            : null, // function(value, $item) { ... }\r\n\tonItemRemove         : null, // function(value) { ... }\r\n\tonClear              : null, // function() { ... }\r\n\tonOptionAdd          : null, // function(value, data) { ... }\r\n\tonOptionRemove       : null, // function(value) { ... }\r\n\tonOptionClear        : null, // function() { ... }\r\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\r\n\tonOptionGroupRemove  : null, // function(id) { ... }\r\n\tonOptionGroupClear   : null, // function() { ... }\r\n\tonDropdownOpen       : null, // function(dropdown) { ... }\r\n\tonDropdownClose      : null, // function(dropdown) { ... }\r\n\tonType               : null, // function(str) { ... }\r\n\tonDelete             : null, // function(values) { ... }\r\n\t*/\r\n\r\n\trender: {\r\n\t\t/*\r\n\t\titem: null,\r\n\t\toptgroup: null,\r\n\t\toptgroup_header: null,\r\n\t\toption: null,\r\n\t\toption_create: null\r\n\t\t*/\r\n\t}\r\n};\r\n","\r\nimport TomSelect from './tom-select';\r\nimport { TomLoadCallback } from './types/index';\r\n\r\n\r\n/**\r\n * Converts a scalar to its best string representation\r\n * for hash keys and HTML attribute values.\r\n *\r\n * Transformations:\r\n *   'str'     -> 'str'\r\n *   null      -> ''\r\n *   undefined -> ''\r\n *   true      -> '1'\r\n *   false     -> '0'\r\n *   0         -> '0'\r\n *   1         -> '1'\r\n *\r\n */\r\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\r\n\tif (typeof value === 'undefined' || value === null) return null;\r\n\treturn get_hash(value);\r\n};\r\n\r\nexport const get_hash = (value:boolean|string):string => {\r\n\tif (typeof value === 'boolean') return value ? '1' : '0';\r\n\treturn value + '';\r\n};\r\n\r\n/**\r\n * Escapes a string for use within HTML.\r\n *\r\n */\r\nexport const escape_html = (str:string):string => {\r\n\treturn (str + '')\r\n\t\t.replace(/&/g, '&amp;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;')\r\n\t\t.replace(/\"/g, '&quot;');\r\n};\r\n\r\n\r\n/**\r\n * Debounce the user provided load function\r\n *\r\n */\r\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\r\n\tvar timeout: null|ReturnType<typeof setTimeout>;\r\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\r\n\t\tvar self = this;\r\n\r\n\t\tif( timeout ){\r\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\r\n\t\t\tclearTimeout(timeout);\r\n\t\t}\r\n\t\ttimeout = setTimeout(function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tself.loadedSearches[value] = true;\r\n\t\t\tfn.call(self, value, callback);\r\n\r\n\t\t}, delay);\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Debounce all fired events types listed in `types`\r\n * while executing the provided `fn`.\r\n *\r\n */\r\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\r\n\tvar type:string;\r\n\tvar trigger = self.trigger;\r\n\tvar event_args:{ [key: string]: any } = {};\r\n\r\n\t// override trigger method\r\n\tself.trigger = function(){\r\n\t\tvar type = arguments[0];\r\n\t\tif (types.indexOf(type) !== -1) {\r\n\t\t\tevent_args[type] = arguments;\r\n\t\t} else {\r\n\t\t\treturn trigger.apply(self, arguments);\r\n\t\t}\r\n\t};\r\n\r\n\t// invoke provided function\r\n\tfn.apply(self, []);\r\n\tself.trigger = trigger;\r\n\r\n\t// trigger queued events\r\n\tfor (type in event_args) {\r\n\t\ttrigger.apply(self, event_args[type]);\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Determines the current selection within a text input control.\r\n * Returns an object containing:\r\n *   - start\r\n *   - length\r\n *\r\n */\r\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\r\n\treturn {\r\n\t\tstart\t: input.selectionStart || 0,\r\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Prevent default\r\n *\r\n */\r\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\r\n\tif( evt ){\r\n\t\tevt.preventDefault();\r\n\t\tif( stop ){\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Prevent default\r\n *\r\n */\r\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\r\n\ttarget.addEventListener(type,callback,options);\r\n};\r\n\r\n\r\n/**\r\n * Return true if the requested key is down\r\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\r\n * The current evt may not always set ( eg calling advanceSelection() )\r\n *\r\n */\r\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\r\n\r\n\tif( !evt ){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif( !evt[key_name] ){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\r\n\r\n\tif( count === 1 ){\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n * Get the id of an element\r\n * If the id attribute is not set, set the attribute with the given id\r\n *\r\n */\r\nexport const getId = (el:Element,id:string) => {\r\n\tconst existing_id = el.getAttribute('id');\r\n\tif( existing_id ){\r\n\t\treturn existing_id;\r\n\t}\r\n\r\n\tel.setAttribute('id',id);\r\n\treturn id;\r\n};\r\n\r\n\r\n/**\r\n * Returns a string with backslashes added before characters that need to be escaped.\r\n */\r\nexport const addSlashes = (str:string):string => {\r\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\r\n\tif( node ) parent.append(node);\r\n};\r\n","import defaults from './defaults';\r\nimport { hash_key } from './utils';\r\nimport { TomOption, TomSettings } from './types/index';\r\nimport { iterate } from '@orchidjs/sifter/lib/utils';\r\n\r\nexport default function getSettings( input:HTMLInputElement, settings_user:Partial<TomSettings>):TomSettings{\r\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\r\n\r\n\tvar attr_data\t\t\t\t= settings.dataAttr;\r\n\tvar field_label\t\t\t\t= settings.labelField;\r\n\tvar field_value\t\t\t\t= settings.valueField;\r\n\tvar field_disabled\t\t\t= settings.disabledField;\r\n\tvar field_optgroup\t\t\t= settings.optgroupField;\r\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\r\n\tvar field_optgroup_value\t= settings.optgroupValueField;\r\n\r\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\r\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\r\n\r\n\tif (!placeholder && !settings.allowEmptyOption) {\r\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\r\n\t\tif( option ){\r\n\t\t\tplaceholder = option.textContent;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar settings_element:{\r\n\t\tplaceholder\t: null|string,\r\n\t\toptions\t\t: TomOption[],\r\n\t\toptgroups\t: TomOption[],\r\n\t\titems\t\t: string[],\r\n\t\tmaxItems\t: null|number,\r\n\t} = {\r\n\t\tplaceholder\t: placeholder,\r\n\t\toptions\t\t: [],\r\n\t\toptgroups\t: [],\r\n\t\titems\t\t: [],\r\n\t\tmaxItems\t: null,\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Initialize from a <select> element.\r\n\t *\r\n\t */\r\n\tvar init_select = () => {\r\n\t\tvar tagName;\r\n\t\tvar options = settings_element.options;\r\n\t\tvar optionsMap:{[key:string]:any} = {};\r\n\t\tvar group_count = 1;\r\n\r\n\t\tvar readData = (el:HTMLElement):TomOption => {\r\n\r\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\r\n\t\t\tvar json\t= attr_data && data[attr_data];\r\n\r\n\t\t\tif( typeof json === 'string' && json.length ){\r\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t};\r\n\r\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\r\n\r\n\t\t\tvar value = hash_key(option.value);\r\n\t\t\tif ( value == null ) return;\r\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\r\n\r\n\t\t\t// if the option already exists, it's probably been\r\n\t\t\t// duplicated in another optgroup. in this case, push\r\n\t\t\t// the current group to the \"optgroup\" property on the\r\n\t\t\t// existing option so that it's rendered in both places.\r\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\r\n\t\t\t\tif (group) {\r\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\r\n\t\t\t\t\tif (!arr) {\r\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\r\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\r\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tarr.push(group);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\tvar option_data             = readData(option);\r\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\r\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\r\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\r\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\r\n\t\t\t\toption_data.$option\t\t\t= option;\r\n\r\n\t\t\t\toptionsMap[value] = option_data;\r\n\t\t\t\toptions.push(option_data);\r\n\t\t\t}\r\n\r\n\t\t\tif( option.selected ){\r\n\t\t\t\tsettings_element.items.push(value);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\r\n\t\t\tvar id:string, optgroup_data\r\n\r\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\r\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\r\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\r\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\r\n\t\t\tsettings_element.optgroups.push(optgroup_data);\r\n\r\n\t\t\tid = optgroup_data[field_optgroup_value];\r\n\r\n\t\t\titerate(optgroup.children, (option)=>{\r\n\t\t\t\taddOption(option as HTMLOptionElement, id);\r\n\t\t\t});\r\n\r\n\t\t};\r\n\r\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\r\n\r\n\t\titerate(input.children,(child)=>{\r\n\t\t\ttagName = child.tagName.toLowerCase();\r\n\t\t\tif (tagName === 'optgroup') {\r\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\r\n\t\t\t} else if (tagName === 'option') {\r\n\t\t\t\taddOption(child as HTMLOptionElement);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Initialize from a <input type=\"text\"> element.\r\n\t *\r\n\t */\r\n\tvar init_textbox = () => {\r\n\t\tconst data_raw = input.getAttribute(attr_data);\r\n\r\n\t\tif (!data_raw) {\r\n\t\t\tvar value = input.value.trim() || '';\r\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\r\n\t\t\tconst values = value.split(settings.delimiter);\r\n\r\n\t\t\titerate( values, (value) => {\r\n\t\t\t\tconst option:TomOption = {};\r\n\t\t\t\toption[field_label] = value;\r\n\t\t\t\toption[field_value] = value;\r\n\t\t\t\tsettings_element.options.push(option);\r\n\t\t\t});\r\n\t\t\tsettings_element.items = values;\r\n\t\t} else {\r\n\t\t\tsettings_element.options = JSON.parse(data_raw);\r\n\t\t\titerate( settings_element.options, (opt) => {\r\n\t\t\t\tsettings_element.items.push(opt[field_value]);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tif (tag_name === 'select') {\r\n\t\tinit_select();\r\n\t} else {\r\n\t\tinit_textbox();\r\n\t}\r\n\r\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\r\n};\r\n","\r\nimport MicroEvent from './contrib/microevent';\r\nimport MicroPlugin from './contrib/microplugin';\r\nimport Sifter from '@orchidjs/sifter/lib/sifter';\r\nimport { escape_regex, iterate } from '@orchidjs/sifter/lib/utils';\r\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames } from './types/index';\r\nimport {highlight, removeHighlight} from './contrib/highlight';\r\nimport * as constants from './constants';\r\nimport getSettings from './getSettings';\r\nimport {\r\n\thash_key,\r\n\tget_hash,\r\n\tescape_html,\r\n\tdebounce_events,\r\n\tgetSelection,\r\n\tpreventDefault,\r\n\taddEvent,\r\n\tloadDebounce,\r\n\tisKeyDown,\r\n\tgetId,\r\n\taddSlashes,\r\n\tappend\r\n} from './utils';\r\n\r\nimport {\r\n\tgetDom,\r\n\tescapeQuery,\r\n\ttriggerEvent,\r\n\tapplyCSS,\r\n\taddClasses,\r\n\tremoveClasses,\r\n\tparentMatch,\r\n\tgetTail,\r\n\tisEmptyObject,\r\n\tnodeIndex,\r\n\tsetAttr,\r\n\treplaceNode\r\n} from './vanilla';\r\n\r\nvar instance_i = 0;\r\n\r\nexport default class TomSelect extends MicroPlugin(MicroEvent){\r\n\r\n\tpublic control_input\t\t\t: HTMLInputElement;\r\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\r\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\r\n\tpublic control\t\t\t\t\t: HTMLElement;\r\n\tpublic dropdown_content\t\t\t: HTMLElement;\r\n\tpublic focus_node\t\t\t\t: HTMLElement;\r\n\r\n\tpublic order\t\t\t\t\t: number = 0;\r\n\tpublic settings\t\t\t\t\t: TomSettings;\r\n\tpublic input\t\t\t\t\t: TomInput;\r\n\tpublic tabIndex\t\t\t\t\t: number;\r\n\tpublic is_select_tag\t\t\t: boolean;\r\n\tpublic rtl\t\t\t\t\t\t: boolean;\r\n\tprivate inputId\t\t\t\t\t: string;\r\n\r\n\tprivate _destroy\t\t\t\t!: () => void;\r\n\tpublic sifter\t\t\t\t\t: Sifter;\r\n\r\n\r\n\tpublic isOpen\t\t\t\t\t: boolean = false;\r\n\tpublic isDisabled\t\t\t\t: boolean = false;\r\n\tpublic isRequired\t\t\t\t: boolean;\r\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\r\n\tpublic isValid\t\t\t\t\t: boolean = true; \r\n\tpublic isLocked\t\t\t\t\t: boolean = false;\r\n\tpublic isFocused\t\t\t\t: boolean = false;\r\n\tpublic isInputHidden\t\t\t: boolean = false;\r\n\tpublic isSetup\t\t\t\t\t: boolean = false;\r\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\r\n\tpublic hasOptions\t\t\t\t: boolean = false;\r\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\r\n\tpublic lastValue\t\t\t\t: string = '';\r\n\tpublic caretPos\t\t\t\t\t: number = 0;\r\n\tpublic loading\t\t\t\t\t: number = 0;\r\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\r\n\r\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\r\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\r\n\r\n\tpublic optgroups\t\t\t\t: TomOptions = {};\r\n\tpublic options\t\t\t\t\t: TomOptions = {};\r\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\r\n\tpublic items\t\t\t\t\t: string[] = [];\r\n\r\n\r\n\r\n\tconstructor( input_arg: string|TomInput, user_settings:Partial<TomSettings> ){\r\n\t\tsuper();\r\n\r\n\t\tinstance_i++;\r\n\r\n\t\tvar dir;\r\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\r\n\r\n\t\tif( input.tomselect ){\r\n\t\t\tthrow new Error('Tom Select already initialized on this element');\r\n\t\t}\r\n\r\n\r\n\t\tinput.tomselect\t\t\t= this;\r\n\r\n\r\n\t\t// detect rtl environment\r\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\r\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\r\n\r\n\t\t// setup default state\r\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\r\n\t\tthis.settings\t\t\t= settings;\r\n\t\tthis.input\t\t\t\t= input;\r\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\r\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\r\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\r\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\r\n\t\tthis.isRequired\t\t\t= input.required;\r\n\r\n\r\n\t\t// search system\r\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\r\n\r\n\t\t// option-dependent defaults\r\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\r\n\t\tif (typeof settings.hideSelected !== 'boolean') {\r\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\r\n\t\t}\r\n\r\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\r\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\r\n\t\t}\r\n\r\n\t\t// set up createFilter callback\r\n\t\tvar filter = settings.createFilter;\r\n\t\tif( typeof filter !== 'function' ){\r\n\r\n\t\t\tif( typeof filter === 'string' ){\r\n\t\t\t\tfilter = new RegExp(filter);\r\n\t\t\t}\r\n\r\n\t\t\tif( filter instanceof RegExp ){\r\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\r\n\t\t\t}else{\r\n\t\t\t\tsettings.createFilter = () => true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis.initializePlugins(settings.plugins);\r\n\t\tthis.setupCallbacks();\r\n\t\tthis.setupTemplates();\r\n\t\t\r\n\t\t\r\n\t\t// Create all elements\r\n\t\tconst wrapper\t\t\t= getDom('<div>');\r\n\t\tconst control\t\t\t= getDom('<div>');\r\n\t\tconst dropdown\t\t\t= this._render('dropdown');\r\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\r\n\t\t\t\r\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\r\n\t\tconst inputMode\t\t\t= settings.mode;\r\n\r\n\t\tvar control_input: HTMLInputElement;\r\n\r\n\r\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\r\n\t\t\r\n\r\n\t\taddClasses(control,settings.controlClass);\r\n\t\tappend( wrapper, control );\r\n\r\n\r\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\r\n\t\tif( settings.copyClassesToDropdown ){ \r\n\t\t\taddClasses( dropdown, classes);\r\n\t\t}\r\n\r\n\r\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\r\n\t\tappend( dropdown, dropdown_content );\r\n\r\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\r\n\r\n\r\n\t\t// default controlInput\r\n\t\tif( !settings.hasOwnProperty('controlInput') ){\r\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\r\n\r\n\t\t\t// set attributes\r\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\r\n\t\t\titerate(attrs,(attr) => {\r\n\t\t\t\tif( input.getAttribute(attr) ){\r\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tcontrol_input.tabIndex = -1;\r\n\t\t\tcontrol.appendChild( control_input );\r\n\t\t\tthis.focus_node\t\t= control_input;\r\n\t\t\t\r\n\t\t// custom controlInput\r\n\t\t}else if( settings.controlInput ){\r\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\r\n\t\t\tthis.focus_node\t\t= control_input;\r\n\t\t\t\r\n\t\t// controlInput = null\r\n\t\t}else{\r\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\r\n\t\t\tthis.focus_node\t\t= control;\r\n\t\t}\r\n\t\t\r\n\t\tthis.wrapper\t\t\t= wrapper;\r\n\t\tthis.dropdown\t\t\t= dropdown;\r\n\t\tthis.dropdown_content\t= dropdown_content;\r\n\t\tthis.control \t\t\t= control;\r\n\t\tthis.control_input\t\t= control_input;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/**\r\n\t * set up event bindings.\r\n\t *\r\n\t */\t\r\n\tsetup(){\r\n\r\n\t\tconst self = this;\r\n\t\tconst settings\t\t\t\t= self.settings;\r\n\t\tconst control_input\t\t\t= self.control_input;\r\n\t\tconst dropdown\t\t\t\t= self.dropdown;\r\n\t\tconst dropdown_content\t\t= self.dropdown_content;\r\n\t\tconst wrapper\t\t\t\t= self.wrapper;\r\n\t\tconst control\t\t\t\t= self.control;\r\n\t\tconst input\t\t\t\t\t= self.input;\r\n\t\tconst focus_node\t\t\t= self.focus_node;\r\n\t\tconst passive_event\t\t\t= { passive: true };\r\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\r\n\r\n\r\n\t\tsetAttr(dropdown_content,{\r\n\t\t\tid: listboxId\r\n\t\t});\r\n\r\n\t\tsetAttr(focus_node,{\r\n\t\t\trole:'combobox',\r\n\t\t\t'aria-haspopup':'listbox',\r\n\t\t\t'aria-expanded':'false',\r\n\t\t\t'aria-controls':listboxId\r\n\t\t});\r\n\r\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\r\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\r\n\t\tconst label\t\t\t= document.querySelector(query);\r\n\t\tconst label_click\t= self.focus.bind(self);\r\n\t\tif( label ){\r\n\t\t\taddEvent(label,'click', label_click );\r\n\t\t\tsetAttr(label,{for:control_id});\r\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\r\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\r\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\r\n\t\t}\r\n\r\n\t\twrapper.style.width = input.style.width;\r\n\r\n\t\tif (self.plugins.names.length) {\r\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\r\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\r\n\t\t}\r\n\r\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\r\n\t\t\tsetAttr(input,{multiple:'multiple'});\r\n\t\t}\r\n\r\n\t\tif (self.settings.placeholder) {\r\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\r\n\t\t}\r\n\r\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\r\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\r\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\r\n\t\t}\r\n\r\n\t\t// debounce user defined load() if loadThrottle > 0\r\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\r\n\t\tif( settings.load && settings.loadThrottle ){\r\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\r\n\t\t}\r\n\r\n\t\tself.control_input.type\t= input.type;\r\n\t\t\r\n\t\t\r\n\t\t// clicking on an option should select it\r\n\t\taddEvent(dropdown,'click',(evt) => {\r\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\r\n\t\t\tif( option ){\r\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\taddEvent(control,'click', (evt) => {\r\n\r\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\r\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// retain focus (see control_input mousedown)\r\n\t\t\tif( control_input.value != '' ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tself.onClick();\r\n\t\t\tpreventDefault(evt,true);\r\n\t\t});\r\n\r\n\r\n\t\t// retain focus by preventing native handling. if the\r\n\t\t// event target is the input it should not be modified.\r\n\t\t// otherwise, text selection within the input won't work.\r\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\r\n\t\t\tif( control_input.value !== '' ){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t\r\n\t\t// keydown on focus_node for arrow_down/arrow_up\r\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\r\n\t\t\r\n\t\t// keypress and input/keyup\r\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\r\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\r\n\t\t\r\n\t\taddEvent(focus_node,'resize',\t\t() => self.positionDropdown(), passive_event);\r\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\r\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\r\n\t\taddEvent(focus_node,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\r\n\r\n\r\n\t\tconst doc_mousedown = (evt:Event) => {\r\n\r\n\t\t\t// blur if target is outside of this instance\r\n\t\t\t// dropdown is not always inside wrapper\r\n\t\t\tconst target = evt.composedPath()[0];\r\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\r\n\t\t\t\tif (self.isFocused) {\r\n\t\t\t\t\tself.blur();\r\n\t\t\t\t}\r\n\t\t\t\tself.inputState();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\r\n\t\t\tpreventDefault(evt,true);\r\n\t\t};\r\n\r\n\t\tvar win_scroll = () => {\r\n\t\t\tif (self.isOpen) {\r\n\t\t\t\tself.positionDropdown();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\taddEvent(document,'mousedown', doc_mousedown);\r\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\r\n\t\taddEvent(window,'resize', win_scroll, passive_event);\r\n\r\n\t\tthis._destroy = () => {\r\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\r\n\t\t\twindow.removeEventListener('sroll',win_scroll);\r\n\t\t\twindow.removeEventListener('resize',win_scroll);\r\n\t\t\tif( label ) label.removeEventListener('click',label_click);\r\n\t\t};\r\n\r\n\t\t// store original html and tab index so that they can be\r\n\t\t// restored when the destroy() method is called.\r\n\t\tthis.revertSettings = {\r\n\t\t\tinnerHTML : input.innerHTML,\r\n\t\t\ttabIndex : input.tabIndex\r\n\t\t};\r\n\r\n\r\n\t\tinput.tabIndex = -1;\r\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\r\n\r\n\t\tself.sync(false);\r\n\t\tsettings.items = [];\r\n\t\tdelete settings.optgroups;\r\n\t\tdelete settings.options;\r\n\r\n\t\taddEvent(input,'invalid', (e) => {\r\n\t\t\tif( self.isValid ){\r\n\t\t\t\tself.isValid = false;\r\n\t\t\t\tself.isInvalid = true;\r\n\t\t\t\tself.refreshState();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tself.updateOriginalInput();\r\n\t\tself.refreshItems();\r\n\t\tself.close(false);\r\n\t\tself.inputState();\r\n\t\tself.isSetup = true;\r\n\r\n\t\tif( input.disabled ){\r\n\t\t\tself.disable();\r\n\t\t}else{\r\n\t\t\tself.enable(); //sets tabIndex\r\n\t\t}\r\n\r\n\t\tself.on('change', this.onChange);\r\n\r\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\r\n\t\tself.trigger('initialize');\r\n\r\n\t\t// preload options\r\n\t\tif (settings.preload === true) {\r\n\t\t\tself.preload();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Register options and optgroups\r\n\t *\r\n\t */\r\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\r\n\r\n\t\t// build options table\r\n\t\tthis.addOptions(options);\r\n\r\n\r\n\t\t// build optgroup table\r\n\t\titerate( optgroups, (optgroup) => {\r\n\t\t\tthis.registerOptionGroup(optgroup);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up default rendering functions.\r\n\t */\r\n\tsetupTemplates() {\r\n\t\tvar self = this;\r\n\t\tvar field_label = self.settings.labelField;\r\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\r\n\r\n\t\tvar templates = {\r\n\t\t\t'optgroup': (data:TomOption) => {\r\n\t\t\t\tlet optgroup = document.createElement('div');\r\n\t\t\t\toptgroup.className = 'optgroup';\r\n\t\t\t\toptgroup.appendChild(data.options);\r\n\t\t\t\treturn optgroup;\r\n\r\n\t\t\t},\r\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\r\n\t\t\t},\r\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\r\n\t\t\t},\r\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\r\n\t\t\t},\r\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\r\n\t\t\t},\r\n\t\t\t'no_results':() => {\r\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\r\n\t\t\t},\r\n\t\t\t'loading':() => {\r\n\t\t\t\treturn '<div class=\"spinner\"></div>';\r\n\t\t\t},\r\n\t\t\t'not_loading':() => {},\r\n\t\t\t'dropdown':() => {\r\n\t\t\t\treturn '<div></div>';\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\r\n\t}\r\n\r\n\t/**\r\n\t * Maps fired events to callbacks provided\r\n\t * in the settings used when creating the control.\r\n\t */\r\n\tsetupCallbacks() {\r\n\t\tvar key, fn;\r\n\t\tvar callbacks:{[key:string]:string} = {\r\n\t\t\t'initialize'      : 'onInitialize',\r\n\t\t\t'change'          : 'onChange',\r\n\t\t\t'item_add'        : 'onItemAdd',\r\n\t\t\t'item_remove'     : 'onItemRemove',\r\n\t\t\t'item_select'     : 'onItemSelect',\r\n\t\t\t'clear'           : 'onClear',\r\n\t\t\t'option_add'      : 'onOptionAdd',\r\n\t\t\t'option_remove'   : 'onOptionRemove',\r\n\t\t\t'option_clear'    : 'onOptionClear',\r\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\r\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\r\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\r\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\r\n\t\t\t'dropdown_close'  : 'onDropdownClose',\r\n\t\t\t'type'            : 'onType',\r\n\t\t\t'load'            : 'onLoad',\r\n\t\t\t'focus'           : 'onFocus',\r\n\t\t\t'blur'            : 'onBlur'\r\n\t\t};\r\n\r\n\t\tfor (key in callbacks) {\r\n\r\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\r\n\t\t\tif (fn) this.on(key, fn);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sync the Tom Select instance with the original input or select\r\n\t *\r\n\t */\r\n\tsync(get_settings:boolean=true):void{\r\n\t\tconst self\t\t= this;\r\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings ) : self.settings;\r\n\r\n\t\tself.setupOptions(settings.options,settings.optgroups);\r\n\r\n\t\tself.setValue(settings.items,true); // silent prevents recursion\r\n\r\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when the main control element\r\n\t * has a click event.\r\n\t *\r\n\t */\r\n\tonClick():void {\r\n\t\tvar self = this;\r\n\r\n\t\tif( self.activeItems.length > 0 ){\r\n\t\t\tself.clearActiveItems();\r\n\t\t\tself.focus();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( self.isFocused && self.isOpen ){\r\n\t\t\tself.blur();\r\n\t\t} else {\r\n\t\t\tself.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated v1.7\r\n\t *\r\n\t */\r\n\tonMouseDown():void {}\r\n\r\n\t/**\r\n\t * Triggered when the value of the control has been changed.\r\n\t * This should propagate the event to the original DOM\r\n\t * input / select element.\r\n\t */\r\n\tonChange() {\r\n\t\ttriggerEvent(this.input, 'input');\r\n\t\ttriggerEvent(this.input, 'change');\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> paste.\r\n\t *\r\n\t */\r\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\r\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If a regex or string is included, this will split the pasted\r\n\t\t// input and create Items for each separate value\r\n\t\tif (self.settings.splitOn) {\r\n\r\n\t\t\t// Wait for pasted text to be recognized in value\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tvar pastedText = self.inputValue();\r\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\r\n\t\t\t\titerate( splitInput, (piece) => {\r\n\t\t\t\t\tself.createItem(piece);\r\n\t\t\t\t});\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> keypress.\r\n\t *\r\n\t */\r\n\tonKeyPress(e:KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\t\tif(self.isLocked){\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\r\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\r\n\t\t\tself.createItem();\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> keydown.\r\n\t *\r\n\t */\r\n\tonKeyDown(e:KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\r\n\t\tif (self.isLocked) {\r\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\r\n\t\t\t\tpreventDefault(e);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (e.keyCode) {\r\n\r\n\t\t\t// ctrl+A: select all\r\n\t\t\tcase constants.KEY_A:\r\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\r\n\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t\tself.selectAll();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// esc: close dropdown\r\n\t\t\tcase constants.KEY_ESC:\r\n\t\t\t\tif (self.isOpen) {\r\n\t\t\t\t\tpreventDefault(e,true);\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\t\t\t\tself.clearActiveItems();\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// down: open dropdown or move selection down\r\n\t\t\tcase constants.KEY_DOWN:\r\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\r\n\t\t\t\t\tself.open();\r\n\t\t\t\t} else if (self.activeOption) {\r\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\r\n\t\t\t\t\tif (next) self.setActiveOption(next);\r\n\t\t\t\t}\r\n\t\t\t\tpreventDefault(e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// up: move selection up\r\n\t\t\tcase constants.KEY_UP:\r\n\t\t\t\tif (self.activeOption) {\r\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\r\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\r\n\t\t\t\t}\r\n\t\t\t\tpreventDefault(e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// return: select active option\r\n\t\t\tcase constants.KEY_RETURN:\r\n\t\t\t\tif( self.canSelect(self.activeOption) ){\r\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\r\n\t\t\t\t\tpreventDefault(e);\r\n\r\n\t\t\t\t// if the option_create=null, the dropdown might be closed\r\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\r\n\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// left: modifiy item selection to the left\r\n\t\t\tcase constants.KEY_LEFT:\r\n\t\t\t\tself.advanceSelection(-1, e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// right: modifiy item selection to the right\r\n\t\t\tcase constants.KEY_RIGHT:\r\n\t\t\t\tself.advanceSelection(1, e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// tab: select active option and/or create item\r\n\t\t\tcase constants.KEY_TAB:\r\n\r\n\t\t\t\tif( self.settings.selectOnTab ){\r\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\r\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\r\n\r\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\r\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\r\n\t\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\r\n\t\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// delete|backspace: delete items\r\n\t\t\tcase constants.KEY_BACKSPACE:\r\n\t\t\tcase constants.KEY_DELETE:\r\n\t\t\t\tself.deleteSelection(e);\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// don't enter text in the control_input when active items are selected\r\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\r\n\t\t\tpreventDefault(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> keyup.\r\n\t *\r\n\t */\r\n\tonInput(e:MouseEvent|KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\r\n\t\tif( self.isLocked ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar value = self.inputValue();\r\n\t\tif (self.lastValue !== value) {\r\n\t\t\tself.lastValue = value;\r\n\r\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\r\n\t\t\t\tself.load(value);\r\n\t\t\t}\r\n\r\n\t\t\tself.refreshOptions();\r\n\t\t\tself.trigger('type', value);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Triggered on <input> focus.\r\n\t *\r\n\t */\r\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\t\tvar wasFocused = self.isFocused;\r\n\r\n\t\tif (self.isDisabled) {\r\n\t\t\tself.blur();\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (self.ignoreFocus) return;\r\n\t\tself.isFocused = true;\r\n\t\tif( self.settings.preload === 'focus' ) self.preload();\r\n\r\n\t\tif (!wasFocused) self.trigger('focus');\r\n\r\n\t\tif (!self.activeItems.length) {\r\n\t\t\tself.showInput();\r\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\r\n\t\t}\r\n\r\n\t\tself.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> blur.\r\n\t *\r\n\t */\r\n\tonBlur(e?:FocusEvent):void {\r\n\r\n\t\tif( document.hasFocus() === false ) return;\r\n\r\n\t\tvar self = this;\r\n\t\tif (!self.isFocused) return;\r\n\t\tself.isFocused = false;\r\n\t\tself.ignoreFocus = false;\r\n\r\n\t\tvar deactivate = () => {\r\n\t\t\tself.close();\r\n\t\t\tself.setActiveItem();\r\n\t\t\tself.setCaret(self.items.length);\r\n\t\t\tself.trigger('blur');\r\n\t\t};\r\n\r\n\t\tif (self.settings.create && self.settings.createOnBlur) {\r\n\t\t\tself.createItem(null, false, deactivate);\r\n\t\t} else {\r\n\t\t\tdeactivate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Triggered when the user clicks on an option\r\n\t * in the autocomplete dropdown menu.\r\n\t *\r\n\t */\r\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\r\n\t\tvar value, self = this;\r\n\r\n\r\n\t\t// should not be possible to trigger a option under a disabled optgroup\r\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif( option.classList.contains('create') ){\r\n\t\t\tself.createItem(null, true, () => {\r\n\t\t\t\tif (self.settings.closeAfterSelect) {\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvalue = option.dataset.value;\r\n\t\t\tif (typeof value !== 'undefined') {\r\n\t\t\t\tself.lastQuery = null;\r\n\t\t\t\tself.addItem(value);\r\n\t\t\t\tif (self.settings.closeAfterSelect) {\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\r\n\t\t\t\t\tself.setActiveOption(option);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Return true if the given option can be selected\r\n\t *\r\n\t */\r\n\tcanSelect(option:HTMLElement|null):boolean{\r\n\r\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when the user clicks on an item\r\n\t * that has been selected.\r\n\t *\r\n\t */\r\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\r\n\t\tvar self = this;\r\n\r\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\r\n\t\t\tpreventDefault(evt);\r\n\t\t\tself.setActiveItem(item, evt);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not to invoke\r\n\t * the user-provided option provider / loader\r\n\t *\r\n\t * Note, there is a subtle difference between\r\n\t * this.canLoad() and this.settings.shouldLoad();\r\n\t *\r\n\t *\t- settings.shouldLoad() is a user-input validator.\r\n\t *\tWhen false is returned, the not_loading template\r\n\t *\twill be added to the dropdown\r\n\t *\r\n\t *\t- canLoad() is lower level validator that checks\r\n\t * \tthe Tom Select instance. There is no inherent user\r\n\t *\tfeedback when canLoad returns false\r\n\t *\r\n\t */\r\n\tcanLoad(value:string):boolean{\r\n\r\n\t\tif( !this.settings.load ) return false;\r\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the user-provided option provider / loader.\r\n\t *\r\n\t */\r\n\tload(value:string):void {\r\n\t\tconst self = this;\r\n\r\n\t\tif( !self.canLoad(value) ) return;\r\n\r\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\r\n\t\tself.loading++;\r\n\r\n\t\tconst callback = self.loadCallback.bind(self);\r\n\t\tself.settings.load.call(self, value, callback);\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked by the user-provided option provider\r\n\t *\r\n\t */\r\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\r\n\t\tconst self = this;\r\n\t\tself.loading = Math.max(self.loading - 1, 0);\r\n\t\tself.lastQuery = null;\r\n\r\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\r\n\t\tself.setupOptions(options,optgroups);\r\n\r\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\r\n\r\n\t\tif (!self.loading) {\r\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\r\n\t\t}\r\n\r\n\t\tself.trigger('load', options, optgroups);\r\n\t}\r\n\t\r\n\tpreload():void{\r\n\t\tvar classList = this.wrapper.classList;\r\n\t\tif( classList.contains('preloaded') ) return;\r\n\t\tclassList.add('preloaded');\r\n\t\tthis.load('');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets the input field of the control to the specified value.\r\n\t *\r\n\t */\r\n\tsetTextboxValue(value:string = '') {\r\n\t\tvar input = this.control_input;\r\n\t\tvar changed = input.value !== value;\r\n\t\tif (changed) {\r\n\t\t\tinput.value = value;\r\n\t\t\ttriggerEvent(input,'update');\r\n\t\t\tthis.lastValue = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the control. If multiple items\r\n\t * can be selected (e.g. <select multiple>), this returns\r\n\t * an array. If only one item can be selected, this\r\n\t * returns a string.\r\n\t *\r\n\t */\r\n\tgetValue():string|string[] {\r\n\r\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\r\n\t\t\treturn this.items;\r\n\t\t}\r\n\r\n\t\treturn this.items.join(this.settings.delimiter);\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the selected items to the given value.\r\n\t *\r\n\t */\r\n\tsetValue( value:string|string[], silent?:boolean ):void{\r\n\t\tvar events = silent ? [] : ['change'];\r\n\r\n\t\tdebounce_events(this, events,() => {\r\n\t\t\tthis.clear(silent);\r\n\t\t\tthis.addItems(value, silent);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Resets the number of max items to the given value\r\n\t *\r\n\t */\r\n\tsetMaxItems(value:null|number){\r\n\t\tif(value === 0) value = null; //reset to unlimited items.\r\n\t\tthis.settings.maxItems = value;\r\n\t\tthis.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the selected item.\r\n\t *\r\n\t */\r\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\r\n\t\tvar self = this;\r\n\t\tvar eventName;\r\n\t\tvar i, begin, end, swap;\r\n\t\tvar last;\r\n\r\n\t\tif (self.settings.mode === 'single') return;\r\n\r\n\t\t// clear the active selection\r\n\t\tif( !item ){\r\n\t\t\tself.clearActiveItems();\r\n\t\t\tif (self.isFocused) {\r\n\t\t\t\tself.showInput();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// modify selection\r\n\t\teventName = e && e.type.toLowerCase();\r\n\r\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\r\n\t\t\tlast\t= self.getLastActive();\r\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\r\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\r\n\r\n\t\t\tif (begin > end) {\r\n\t\t\t\tswap  = begin;\r\n\t\t\t\tbegin = end;\r\n\t\t\t\tend   = swap;\r\n\t\t\t}\r\n\t\t\tfor (i = begin; i <= end; i++) {\r\n\t\t\t\titem = self.control.children[i] as TomItem;\r\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\r\n\t\t\t\t\tself.setActiveItemClass(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpreventDefault(e);\r\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\r\n\t\t\tif( item.classList.contains('active') ){\r\n\t\t\t\tself.removeActiveItem( item );\r\n\t\t\t} else {\r\n\t\t\t\tself.setActiveItemClass(item);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tself.clearActiveItems();\r\n\t\t\tself.setActiveItemClass(item);\r\n\t\t}\r\n\r\n\t\t// ensure control has focus\r\n\t\tself.hideInput();\r\n\t\tif (!self.isFocused) {\r\n\t\t\tself.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the active and last-active classes\r\n\t *\r\n\t */\r\n\tsetActiveItemClass( item:TomItem ){\r\n\t\tconst self = this;\r\n\t\tconst last_active = self.control.querySelector('.last-active');\r\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\r\n\r\n\t\taddClasses(item,'active last-active');\r\n\t\tself.trigger('item_select', item);\r\n\t\tif( self.activeItems.indexOf(item) == -1 ){\r\n\t\t\tself.activeItems.push( item );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove active item\r\n\t *\r\n\t */\r\n\tremoveActiveItem( item:TomItem ){\r\n\t\tvar idx = this.activeItems.indexOf(item);\r\n\t\tthis.activeItems.splice(idx, 1);\r\n\t\tremoveClasses(item,'active');\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all the active items\r\n\t *\r\n\t */\r\n\tclearActiveItems(){\r\n\t\tremoveClasses(this.activeItems,'active');\r\n\t\tthis.activeItems = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the selected item in the dropdown menu\r\n\t * of available options.\r\n\t *\r\n\t */\r\n\tsetActiveOption( option:null|HTMLElement ):void{\r\n\r\n\t\tif( option === this.activeOption ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.clearActiveOption();\r\n\t\tif( !option ) return;\r\n\r\n\t\tthis.activeOption = option;\r\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\r\n\t\tsetAttr(option,{'aria-selected':'true'});\r\n\t\taddClasses(option,'active');\r\n\t\tthis.scrollToOption(option);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the dropdown_content scrollTop to display the option\r\n\t *\r\n\t */\r\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\r\n\r\n\t\tif( !option ) return;\r\n\r\n\t\tconst content\t\t= this.dropdown_content;\r\n\t\tconst height_menu\t= content.clientHeight;\r\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\r\n\t\tconst height_item\t= option.offsetHeight;\r\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\r\n\r\n\t\tif (y + height_item > height_menu + scrollTop) {\r\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\r\n\r\n\t\t} else if (y < scrollTop) {\r\n\t\t\tthis.scroll(y, behavior);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scroll the dropdown to the given position\r\n\t *\r\n\t */\r\n\tscroll( scrollTop:number, behavior?:string ):void{\r\n\t\tconst content = this.dropdown_content;\r\n\t\tif( behavior ){\r\n\t\t\tcontent.style.scrollBehavior = behavior;\r\n\t\t}\r\n\t\tcontent.scrollTop = scrollTop;\r\n\t\tcontent.style.scrollBehavior = '';\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the active option\r\n\t *\r\n\t */\r\n\tclearActiveOption(){\r\n\t\tif( this.activeOption ){\r\n\t\t\tremoveClasses(this.activeOption,'active');\r\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\r\n\t\t}\r\n\t\tthis.activeOption = null;\r\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Selects all items (CTRL + A).\r\n\t */\r\n\tselectAll() {\r\n\r\n\t\tif (this.settings.mode === 'single') return;\r\n\r\n\t\tconst activeItems = this.controlChildren();\r\n\r\n\t\tif( !activeItems.length ) return;\r\n\t\t\r\n\t\tthis.hideInput();\r\n\t\tthis.close();\r\n\r\n\t\tthis.activeItems = activeItems;\r\n\t\taddClasses( activeItems, 'active' );\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the control_input should be in a hidden or visible state\r\n\t *\r\n\t */\r\n\tinputState(){\r\n\t\tvar self = this;\r\n\r\n\t\tif( !self.control.contains(self.control_input) ) return;\r\n\t\t\t\t\t\r\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\r\n\r\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\r\n\t\t\tself.setTextboxValue();\r\n\t\t\tself.isInputHidden = true;\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\t\t\t\r\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\r\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\r\n\t\t\t}\t\t\t\r\n\t\t\tself.isInputHidden = false;\r\n\t\t}\r\n\r\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the input element out of view, while\r\n\t * retaining its focus.\r\n\t * @deprecated 1.3\r\n\t */\r\n\thideInput() {\r\n\t\tthis.inputState();\r\n\t}\r\n\r\n\t/**\r\n\t * Restores input visibility.\r\n\t * @deprecated 1.3\r\n\t */\r\n\tshowInput() {\r\n\t\tthis.inputState();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the input value\r\n\t */\r\n\tinputValue(){\r\n\t\treturn this.control_input.value.trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Gives the control focus.\r\n\t */\r\n\tfocus() {\r\n\t\tvar self = this;\r\n\t\tif (self.isDisabled) return;\r\n\r\n\t\tself.ignoreFocus = true;\r\n\t\t\r\n\t\tif( self.control_input.offsetWidth ){\r\n\t\t\tself.control_input.focus();\r\n\t\t}else{\r\n\t\t\tself.focus_node.focus();\r\n\t\t}\r\n\t\t\r\n\t\tsetTimeout(() => {\r\n\t\t\tself.ignoreFocus = false;\r\n\t\t\tself.onFocus();\r\n\t\t}, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Forces the control out of focus.\r\n\t *\r\n\t */\r\n\tblur():void {\r\n\t\tthis.focus_node.blur();\r\n\t\tthis.onBlur();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a function that scores an object\r\n\t * to show how good of a match it is to the\r\n\t * provided query.\r\n\t *\r\n\t * @return {function}\r\n\t */\r\n\tgetScoreFunction(query:string) {\r\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\r\n\t}\r\n\r\n\t/**\r\n\t * Returns search options for sifter (the system\r\n\t * for scoring and sorting results).\r\n\t *\r\n\t * @see https://github.com/orchidjs/sifter.js\r\n\t * @return {object}\r\n\t */\r\n\tgetSearchOptions() {\r\n\t\tvar settings = this.settings;\r\n\t\tvar sort = settings.sortField;\r\n\t\tif (typeof settings.sortField === 'string') {\r\n\t\t\tsort = [{field: settings.sortField}];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfields      : settings.searchField,\r\n\t\t\tconjunction : settings.searchConjunction,\r\n\t\t\tsort        : sort,\r\n\t\t\tnesting     : settings.nesting\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Searches through available options and returns\r\n\t * a sorted array of matches.\r\n\t *\r\n\t */\r\n\tsearch(query:string) : ReturnType<Sifter['search']>{\r\n\t\tvar i, result, calculateScore;\r\n\t\tvar self     = this;\r\n\t\tvar options  = this.getSearchOptions();\r\n\r\n\t\t// validate user-provided result scoring function\r\n\t\tif ( self.settings.score ){\r\n\t\t\tcalculateScore = self.settings.score.call(self,query);\r\n\t\t\tif (typeof calculateScore !== 'function') {\r\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// perform search\r\n\t\tif (query !== self.lastQuery) {\r\n\t\t\tself.lastQuery\t\t\t= query;\r\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\r\n\t\t\tself.currentResults\t\t= result;\r\n\t\t} else {\r\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\r\n\t\t}\r\n\r\n\t\t// filter out selected items\r\n\t\tif( self.settings.hideSelected ){\r\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\r\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\r\n\t\t\t\t\tresult.items.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the list of available options shown\r\n\t * in the autocomplete dropdown menu.\r\n\t *\r\n\t */\r\n\trefreshOptions( triggerDropdown:boolean = true ){\r\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_value, active_group;\r\n\t\tvar create;\r\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\r\n\r\n\t\tconst groups_order:string[]\t= [];\r\n\t\tvar self\t\t\t\t\t= this;\r\n\t\tvar query\t\t\t\t\t= self.inputValue();\r\n\t\tvar results\t\t\t\t\t= self.search(query);\r\n\t\tvar active_option\t\t\t= self.activeOption;\r\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\r\n\t\tvar dropdown_content\t\t= self.dropdown_content;\r\n\r\n\t\tif( active_option ){\r\n\t\t\tactive_value = active_option.dataset.value;\r\n\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\r\n\t\t}\r\n\r\n\t\t// build markup\r\n\t\tn = results.items.length;\r\n\t\tif (typeof self.settings.maxOptions === 'number') {\r\n\t\t\tn = Math.min(n, self.settings.maxOptions);\r\n\t\t}\r\n\r\n\t\tif( n > 0 ){\r\n\t\t\tshow_dropdown = true;\r\n\t\t}\r\n\r\n\t\t// render and group available options individually\r\n\t\tfor (i = 0; i < n; i++) {\r\n\r\n\t\t\t// get option dom element\r\n\t\t\tlet opt_value\t\t= results.items[i].id;\r\n\t\t\tlet option\t\t\t= self.options[opt_value];\r\n\t\t\tlet option_el\t\t= self.getOption(opt_value,true) as HTMLElement;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// toggle 'selected' class\r\n\t\t\tif( !self.settings.hideSelected ){\r\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\r\n\t\t\t}\r\n\r\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\r\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\r\n\r\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\r\n\t\t\t\toptgroup = optgroups[j];\r\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\r\n\t\t\t\t\toptgroup = '';\r\n\t\t\t\t}\r\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\r\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\r\n\t\t\t\t\tgroups_order.push(optgroup);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\r\n\t\t\t\tif( j > 0 ){\r\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\r\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\r\n\t\t\t\t\toption_el.classList.add('ts-cloned');\r\n\t\t\t\t\tremoveClasses(option_el,'active');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// make sure we keep the activeOption in the same group\r\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\r\n\t\t\t\t\tactive_option = option_el;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroups[optgroup].appendChild(option_el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// sort optgroups\r\n\t\tif (this.settings.lockOptgroupOrder) {\r\n\t\t\tgroups_order.sort((a, b) => {\r\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\r\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\r\n\t\t\t\treturn a_order - b_order;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// render optgroup headers & join groups\r\n\t\thtml = document.createDocumentFragment();\r\n\t\titerate( groups_order, (optgroup) => {\r\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\r\n\r\n\t\t\t\tlet group_options = document.createDocumentFragment();\r\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\r\n\t\t\t\tappend( group_options, header );\r\n\t\t\t\tappend( group_options, groups[optgroup] );\r\n\r\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\r\n\r\n\t\t\t\tappend( html, group_html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tappend( html, groups[optgroup] );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdropdown_content.innerHTML = '';\r\n\t\tappend( dropdown_content, html );\r\n\r\n\t\t// highlight matching terms inline\r\n\t\tif (self.settings.highlight) {\r\n\t\t\tremoveHighlight( dropdown_content );\r\n\t\t\tif (results.query.length && results.tokens.length) {\r\n\t\t\t\titerate( results.tokens, (tok) => {\r\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// helper method for adding templates to dropdown\r\n\t\tvar add_template = (template:TomTemplateNames) => {\r\n\t\t\tlet content = self.render(template,{input:query});\r\n\t\t\tif( content ){\r\n\t\t\t\tshow_dropdown = true;\r\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\r\n\t\t\t}\r\n\t\t\treturn content;\r\n\t\t};\r\n\t\t\r\n\r\n\t\t// add loading message\r\n\t\tif( self.loading ){\r\n\t\t\tadd_template('loading');\r\n\t\t\t\r\n\t\t// invalid query\r\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\r\n\t\t\tadd_template('not_loading');\r\n\r\n\t\t// add no_results message\r\n\t\t}else if( results.items.length === 0 ){\r\n\t\t\tadd_template('no_results');\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\t// add create option\r\n\t\thas_create_option = self.canCreate(query);\r\n\t\tif (has_create_option) {\r\n\t\t\tcreate = add_template('option_create');\r\n\t\t}\r\n\r\n\r\n\t\t// activate\r\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\r\n\t\tif( show_dropdown ){\r\n\r\n\t\t\tif (results.items.length > 0) {\r\n\r\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\r\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\r\n\r\n\t\t\t\t\tlet active_index = 0;\r\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\r\n\t\t\t\t\t\tactive_index = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else if( create ){\r\n\t\t\t\tactive_option = create;\r\n\t\t\t}\r\n\r\n\t\t\tif( triggerDropdown && !self.isOpen ){\r\n\t\t\t\tself.open();\r\n\t\t\t\tself.scrollToOption(active_option,'auto');\r\n\t\t\t}\r\n\t\t\tself.setActiveOption(active_option);\r\n\r\n\t\t}else{\r\n\t\t\tself.clearActiveOption();\r\n\t\t\tif( triggerDropdown && self.isOpen ){\r\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of selectable options\r\n\t *\r\n\t */\r\n\tselectable():NodeList{\r\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Adds an available option. If it already exists,\r\n\t * nothing will happen. Note: this does not refresh\r\n\t * the options list dropdown (use `refreshOptions`\r\n\t * for that).\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t *   this.addOption(data)\r\n\t *\r\n\t */\r\n\taddOption( data:TomOption, user_created = false ):false|string {\r\n\t\tconst self = this;\r\n\r\n\t\t// @deprecated 1.7.7\r\n\t\t// use addOptions( array, user_created ) for adding multiple options\r\n\t\tif( Array.isArray(data) ){\r\n\t\t\tself.addOptions( data, user_created);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst key = hash_key(data[self.settings.valueField]);\r\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\r\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\r\n\t\tself.options[key]\t= data;\r\n\t\tself.lastQuery\t\t= null;\r\n\r\n\t\tif( user_created ){\r\n\t\t\tself.userOptions[key] = user_created;\r\n\t\t\tself.trigger('option_add', key, data);\r\n\t\t}\r\n\r\n\t\treturn key;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add multiple options\r\n\t *\r\n\t */\r\n\taddOptions( data:TomOption[], user_created = false ):void{\r\n\t\titerate( data, (dat) => {\r\n\t\t\tthis.addOption(dat, user_created);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated 1.7.7\r\n\t */\r\n\tregisterOption( data:TomOption ):false|string {\r\n\t\treturn this.addOption(data);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers an option group to the pool of option groups.\r\n\t *\r\n\t * @return {boolean|string}\r\n\t */\r\n\tregisterOptionGroup(data:TomOption) {\r\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\r\n\r\n\t\tif ( key === null ) return false;\r\n\r\n\t\tdata.$order = data.$order || ++this.order;\r\n\t\tthis.optgroups[key] = data;\r\n\t\treturn key;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new optgroup for options\r\n\t * to be bucketed into.\r\n\t *\r\n\t */\r\n\taddOptionGroup(id:string, data:TomOption) {\r\n\t\tvar hashed_id;\r\n\t\tdata[this.settings.optgroupValueField] = id;\r\n\r\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\r\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an existing option group.\r\n\t *\r\n\t */\r\n\tremoveOptionGroup(id:string) {\r\n\t\tif (this.optgroups.hasOwnProperty(id)) {\r\n\t\t\tdelete this.optgroups[id];\r\n\t\t\tthis.clearCache();\r\n\t\t\tthis.trigger('optgroup_remove', id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all existing option groups.\r\n\t */\r\n\tclearOptionGroups() {\r\n\t\tthis.optgroups = {};\r\n\t\tthis.clearCache();\r\n\t\tthis.trigger('optgroup_clear');\r\n\t}\r\n\r\n\t/**\r\n\t * Updates an option available for selection. If\r\n\t * it is visible in the selected items or options\r\n\t * dropdown, it will be re-rendered automatically.\r\n\t *\r\n\t */\r\n\tupdateOption(value:string, data:TomOption) {\r\n\t\tconst self = this;\r\n\t\tvar item_new;\r\n\t\tvar index_item;\r\n\r\n\t\tconst value_old\t\t= hash_key(value);\r\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\r\n\t\t\r\n\t\t// sanity checks\r\n\t\tif( value_old === null ) return;\r\n\t\tif( !self.options.hasOwnProperty(value_old) ) return;\r\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\r\n\r\n\r\n\t\tconst option\t\t= self.getOption(value_old);\r\n\t\tconst item\t\t\t= self.getItem(value_old);\r\n\r\n\r\n\t\tdata.$order = data.$order || self.options[value_old].$order;\r\n\t\tdelete self.options[value_old];\r\n\r\n\t\t// invalidate render cache\r\n\t\t// don't remove existing node yet, we'll remove it after replacing it\r\n\t\tself.uncacheValue(value_new);\r\n\r\n\t\tself.options[value_new] = data;\r\n\r\n\t\t// update the option if it's in the dropdown\r\n\t\tif( option ){\r\n\t\t\tif( self.dropdown_content.contains(option) ){\r\n\r\n\t\t\t\tconst option_new\t= self._render('option', data);\r\n\t\t\t\treplaceNode(option, option_new);\r\n\r\n\t\t\t\tif( self.activeOption === option ){\r\n\t\t\t\t\tself.setActiveOption(option_new);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toption.remove();\r\n\t\t}\r\n\r\n\t\t// update the item if we have one\r\n\t\tif( item ){\r\n\t\t\tindex_item = self.items.indexOf(value_old);\r\n\t\t\tif (index_item !== -1) {\r\n\t\t\t\tself.items.splice(index_item, 1, value_new);\r\n\t\t\t}\r\n\r\n\t\t\titem_new\t= self._render('item', data);\r\n\r\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\r\n\r\n\t\t\treplaceNode( item, item_new);\r\n\t\t}\r\n\r\n\t\t// invalidate last query because we might have updated the sortField\r\n\t\tself.lastQuery = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a single option.\r\n\t *\r\n\t */\r\n\tremoveOption(value:string, silent?:boolean):void {\r\n\t\tconst self = this;\r\n\t\tvalue = get_hash(value);\r\n\r\n\t\tself.uncacheValue(value);\r\n\r\n\t\tdelete self.userOptions[value];\r\n\t\tdelete self.options[value];\r\n\t\tself.lastQuery = null;\r\n\t\tself.trigger('option_remove', value);\r\n\t\tself.removeItem(value, silent);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all options.\r\n\t */\r\n\tclearOptions() {\r\n\r\n\t\tthis.loadedSearches\t\t= {};\r\n\t\tthis.userOptions\t\t= {};\r\n\t\tthis.clearCache();\r\n\t\tvar selected:TomOptions\t= {};\r\n\t\titerate(this.options,(option,key)=>{\r\n    \t\tif( this.items.indexOf(key as string) >= 0 ){\r\n\t\t\t\tselected[key] = this.options[key];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.options = this.sifter.items = selected;\r\n\t\tthis.lastQuery = null;\r\n\t\tthis.trigger('option_clear');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the dom element of the option\r\n\t * matching the given value.\r\n\t *\r\n\t */\r\n\tgetOption(value:null|string, create:boolean=false):null|HTMLElement {\r\n\t\tconst hashed = hash_key(value);\r\n\r\n\t\tif( hashed !== null && this.options.hasOwnProperty(hashed) ){\r\n\t\t\tconst option = this.options[hashed];\r\n\t\t\t\t\t\t\r\n\t\t\tif( option.$div ){\r\n\t\t\t\treturn option.$div;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( create ){\r\n\t\t\t\treturn this._render('option', option);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dom element of the next or previous dom element of the same type\r\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\r\n\t *\r\n\t */\r\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\r\n\t\tvar self = this, all;\r\n\r\n\t\tif( !option ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif( type == 'item' ){\r\n\t\t\tall\t\t\t= self.controlChildren();\r\n\t\t}else{\r\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\r\n\t\t}\r\n\r\n\t\tfor( let i = 0; i < all.length; i++ ){\r\n\t\t\tif( all[i] != option ){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif( direction > 0 ){\r\n\t\t\t\treturn all[i+1] as HTMLElement;\r\n\t\t\t}\r\n\r\n\t\t\treturn all[i-1] as HTMLElement;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the dom element of the item\r\n\t * matching the given value.\r\n\t *\r\n\t */\r\n\tgetItem(item:string|TomItem|null):null|TomItem {\r\n\r\n\t\tif( typeof item == 'object' ){\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\tvar value = hash_key(item);\r\n\t\treturn value !== null\r\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\t/**\r\n\t * \"Selects\" multiple items at once. Adds them to the list\r\n\t * at the current caret position.\r\n\t *\r\n\t */\r\n\taddItems( values:string|string[], silent?:boolean ):void{\r\n\t\tvar self = this;\r\n\r\n\t\tvar items = Array.isArray(values) ? values : [values];\r\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\r\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\r\n\t\t\tself.isPending = (i < n - 1);\r\n\t\t\tself.addItem(items[i], silent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \"Selects\" an item. Adds it to the list\r\n\t * at the current caret position.\r\n\t *\r\n\t */\r\n\taddItem( value:string, silent?:boolean ):void{\r\n\t\tvar events = silent ? [] : ['change'];\r\n\r\n\t\tdebounce_events(this, events, () => {\r\n\t\t\tvar item, wasFull;\r\n\t\t\tconst self = this;\r\n\t\t \tconst inputMode = self.settings.mode;\r\n\t\t\tconst hashed = hash_key(value);\r\n\r\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\r\n\r\n\t\t\t\tif( inputMode === 'single' ){\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\r\n\t\t\tif (inputMode === 'single') self.clear(silent);\r\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\r\n\r\n\t\t\titem = self._render('item', self.options[hashed]);\r\n\r\n\t\t\tif( self.control.contains(item) ){ // duplicates\r\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\r\n\t\t\t}\r\n\r\n\t\t\twasFull = self.isFull();\r\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\r\n\t\t\tself.insertAtCaret(item);\r\n\r\n\t\t\tif (self.isSetup) {\r\n\r\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\r\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\r\n\t\t\t\t\tlet option = self.getOption(hashed);\r\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\r\n\t\t\t\t\tif( next ){\r\n\t\t\t\t\t\tself.setActiveOption(next);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refreshOptions after setActiveOption(),\r\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\r\n\t\t\t\tif( !self.isPending ){\r\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\r\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t} else if (!self.isPending) {\r\n\t\t\t\t\tself.positionDropdown();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.trigger('item_add', hashed, item);\r\n\r\n\t\t\t\tif (!self.isPending) {\r\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\r\n\t\t\t\tself.inputState();\r\n\t\t\t\tself.refreshState();\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the selected item matching\r\n\t * the provided value.\r\n\t *\r\n\t */\r\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\r\n\t\tconst self\t\t= this;\r\n\t\titem\t\t\t= self.getItem(item);\r\n\r\n\t\tif( !item ) return;\r\n\r\n\t\tvar i,idx;\r\n\t\tconst value\t= item.dataset.value;\r\n\t\ti = nodeIndex(item);\r\n\r\n\t\titem.remove();\r\n\t\tif( item.classList.contains('active') ){\r\n\t\t\tidx = self.activeItems.indexOf(item);\r\n\t\t\tself.activeItems.splice(idx, 1);\r\n\t\t\tremoveClasses(item,'active');\r\n\t\t}\r\n\r\n\t\tself.items.splice(i, 1);\r\n\t\tself.lastQuery = null;\r\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\r\n\t\t\tself.removeOption(value, silent);\r\n\t\t}\r\n\r\n\t\tif (i < self.caretPos) {\r\n\t\t\tself.setCaret(self.caretPos - 1);\r\n\t\t}\r\n\r\n\t\tself.updateOriginalInput({silent: silent});\r\n\t\tself.refreshState();\r\n\t\tself.positionDropdown();\r\n\t\tself.trigger('item_remove', value, item);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the `create` method provided in the\r\n\t * TomSelect options that should provide the data\r\n\t * for the new item, given the user input.\r\n\t *\r\n\t * Once this completes, it will be added\r\n\t * to the item list.\r\n\t *\r\n\t */\r\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\r\n\t\tvar self  = this;\r\n\t\tvar caret = self.caretPos;\r\n\t\tvar output;\r\n\t\tinput = input || self.inputValue();\r\n\r\n\t\tif (!self.canCreate(input)) {\r\n\t\t\tcallback();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tself.lock();\r\n\r\n\t\tvar created = false;\r\n\t\tvar create = (data?:boolean|TomOption) => {\r\n\t\t\tself.unlock();\r\n\r\n\t\t\tif (!data || typeof data !== 'object') return callback();\r\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\r\n\t\t\tif( typeof value !== 'string' ){\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\r\n\t\t\tself.setTextboxValue();\r\n\t\t\tself.addOption(data,true);\r\n\t\t\tself.setCaret(caret);\r\n\t\t\tself.addItem(value);\r\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\r\n\t\t\tcallback(data);\r\n\t\t\tcreated = true;\r\n\t\t};\r\n\r\n\t\tif( typeof self.settings.create === 'function' ){\r\n\t\t\toutput = self.settings.create.call(this, input, create);\r\n\t\t}else{\r\n\t\t\toutput = {\r\n\t\t\t\t[self.settings.labelField]: input,\r\n\t\t\t\t[self.settings.valueField]: input,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif( !created ){\r\n\t\t\tcreate(output);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-renders the selected item lists.\r\n\t */\r\n\trefreshItems() {\r\n\t\tvar self = this;\r\n\t\tself.lastQuery = null;\r\n\r\n\t\tif (self.isSetup) {\r\n\t\t\tself.addItems(self.items);\r\n\t\t}\r\n\r\n\t\tself.updateOriginalInput();\r\n\t\tself.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all state-dependent attributes\r\n\t * and CSS classes.\r\n\t */\r\n\trefreshState() {\r\n\t\tconst self     = this;\r\n\r\n\t\tself.refreshValidityState();\r\n\r\n\t\tconst isFull\t= self.isFull();\r\n\t\tconst isLocked\t= self.isLocked;\r\n\r\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\r\n\t\t\r\n\t\t\r\n\t\tconst wrap_classList = self.wrapper.classList;\r\n\r\n\t\twrap_classList.toggle('focus', self.isFocused)\r\n\t\twrap_classList.toggle('disabled', self.isDisabled)\r\n\t\twrap_classList.toggle('required', self.isRequired)\r\n\t\twrap_classList.toggle('invalid', !self.isValid)\r\n\t\twrap_classList.toggle('locked', isLocked)\r\n\t\twrap_classList.toggle('full', isFull)\r\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\r\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\r\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\r\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Update the `required` attribute of both input and control input.\r\n\t *\r\n\t * The `required` property needs to be activated on the control input\r\n\t * for the error to be displayed at the right place. `required` also\r\n\t * needs to be temporarily deactivated on the input since the input is\r\n\t * hidden and can't show errors.\r\n\t */\r\n\trefreshValidityState() {\r\n\t\tvar self = this;\r\n\r\n\t\tif( !self.input.checkValidity ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tself.isValid = self.input.checkValidity();\r\n\t\tself.isInvalid = !self.isValid;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not more items can be added\r\n\t * to the control without exceeding the user-defined maximum.\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tisFull() {\r\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the original <select> or <input>\r\n\t * element to reflect the current state.\r\n\t *\r\n\t */\r\n\tupdateOriginalInput( opts:TomArgObject = {} ){\r\n\t\tconst self = this;\r\n\t\tvar option, label;\r\n\t\t\r\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\r\n\r\n\t\tif( self.is_select_tag ){\r\n\r\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\r\n\r\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\r\n\r\n\t\t\t\tif( !option_el ){\r\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// don't move empty option from top of list\r\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\t\t\t\t\r\n\t\t\t\tif( option_el != empty_option ){\r\n\t\t\t\t\tself.input.append(option_el);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tselected.push(option_el);\r\n\r\n\t\t\t\toption_el.selected = true;\r\n\r\n\t\t\t\treturn option_el;\r\n\t\t\t}\r\n\r\n\t\t\t// unselect all selected options\r\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\r\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// nothing selected?\r\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\r\n\r\n\t\t\t// order selected <option> tags for values in self.items\r\n\t\t\t}else{\r\n\t\t\t\t\t\r\n\t\t\t\tself.items.forEach((value)=>{\r\n\t\t\t\t\toption\t\t\t= self.options[value];\r\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\r\n\r\n\t\t\t\t\tif( selected.includes(option.$option) ){\r\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\r\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tself.input.value = self.getValue() as string;\r\n\t\t}\r\n\r\n\t\tif (self.isSetup) {\r\n\t\t\tif (!opts.silent) {\r\n\t\t\t\tself.trigger('change', self.getValue() );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the autocomplete dropdown containing\r\n\t * the available options.\r\n\t */\r\n\topen() {\r\n\t\tvar self = this;\r\n\r\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\r\n\t\tself.isOpen = true;\r\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\r\n\t\tself.refreshState();\r\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\r\n\t\tself.positionDropdown();\r\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\r\n\t\tself.focus();\r\n\t\tself.trigger('dropdown_open', self.dropdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the autocomplete dropdown menu.\r\n\t */\r\n\tclose(setTextboxValue=true) {\r\n\t\tvar self = this;\r\n\t\tvar trigger = self.isOpen;\r\n\r\n\t\tif( setTextboxValue ){\r\n\r\n\t\t\t// before blur() to prevent form onchange event\r\n\t\t\tself.setTextboxValue();\r\n\r\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\r\n\t\t\t\tself.hideInput();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tself.isOpen = false;\r\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\r\n\t\tapplyCSS(self.dropdown,{display: 'none'});\r\n\t\tif( self.settings.hideSelected ){\r\n\t\t\tself.clearActiveOption();\r\n\t\t}\r\n\t\tself.refreshState();\r\n\r\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates and applies the appropriate\r\n\t * position of the dropdown if dropdownParent = 'body'.\r\n\t * Otherwise, position is determined by css\r\n\t */\r\n\tpositionDropdown(){\r\n\r\n\t\tif( this.settings.dropdownParent !== 'body' ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar context\t\t\t= this.control;\r\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\r\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\r\n\t\tvar left\t\t\t= rect.left + window.scrollX;\r\n\r\n\r\n\t\tapplyCSS(this.dropdown,{\r\n\t\t\twidth : rect.width + 'px',\r\n\t\t\ttop   : top + 'px',\r\n\t\t\tleft  : left + 'px'\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets / clears all selected items\r\n\t * from the control.\r\n\t *\r\n\t */\r\n\tclear(silent?:boolean) {\r\n\t\tvar self = this;\r\n\r\n\t\tif (!self.items.length) return;\r\n\r\n\t\tvar items = self.controlChildren();\r\n\t\titerate(items,(item)=>{\r\n\t\t\tself.removeItem(item,true);\r\n\t\t});\r\n\r\n\t\tself.showInput();\r\n\t\tif( !silent ) self.updateOriginalInput();\r\n\t\tself.trigger('clear');\r\n\t}\r\n\r\n\t/**\r\n\t * A helper method for inserting an element\r\n\t * at the current caret position.\r\n\t *\r\n\t */\r\n\tinsertAtCaret(el:HTMLElement) {\r\n\t\tconst self\t\t= this;\t\t\r\n\t\tconst caret\t\t= self.caretPos;\r\n\t\tconst target\t= self.control;\r\n\r\n\t\ttarget.insertBefore(el, target.children[caret]);\r\n\r\n\t\tself.setCaret(caret + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the current selected item(s).\r\n\t *\r\n\t */\r\n\tdeleteSelection(e:KeyboardEvent):boolean {\r\n\t\tvar direction, selection, caret, tail;\r\n\t\tvar self = this;\r\n\r\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\r\n\t\tselection = getSelection(self.control_input);\r\n\r\n\r\n\t\t// determine items that will be removed\r\n\t\tconst rm_items:TomItem[]\t= [];\r\n\r\n\t\tif (self.activeItems.length) {\r\n\r\n\t\t\ttail = getTail(self.activeItems, direction);\r\n\t\t\tcaret = nodeIndex(tail);\r\n\r\n\t\t\tif (direction > 0) { caret++; }\r\n\r\n\t\t\titerate(self.activeItems, (item) => rm_items.push(item) );\r\n\r\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\r\n\t\t\tconst items = self.controlChildren();\r\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\r\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\r\n\r\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\r\n\t\t\t\trm_items.push(items[self.caretPos]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst values = rm_items.map(item => item.dataset.value);\r\n\r\n\t\t// allow the callback to abort\r\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tpreventDefault(e,true);\r\n\r\n\t\t// perform removal\r\n\t\tif (typeof caret !== 'undefined') {\r\n\t\t\tself.setCaret(caret);\r\n\t\t}\r\n\r\n\t\twhile( rm_items.length ){\r\n\t\t\tself.removeItem(rm_items.pop());\r\n\t\t}\r\n\r\n\t\tself.showInput();\r\n\t\tself.positionDropdown();\r\n\t\tself.refreshOptions(false);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Selects the previous / next item (depending on the `direction` argument).\r\n\t *\r\n\t * > 0 - right\r\n\t * < 0 - left\r\n\t *\r\n\t */\r\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\r\n\t\tvar last_active, adjacent, self = this;\r\n\r\n\t\tif (self.rtl) direction *= -1;\r\n\t\tif( self.inputValue().length ) return;\r\n\r\n\r\n\t\t// add or remove to active items\r\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\r\n\r\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\r\n\t\t\tif( last_active ){\r\n\r\n\t\t\t\tif( !last_active.classList.contains('active') ){\r\n\t\t\t\t\tadjacent\t\t\t= last_active;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\r\n\t\t\t\t}\r\n\r\n\t\t\t// if no active item, get items adjacent to the control input\r\n\t\t\t}else if( direction > 0 ){\r\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\r\n\t\t\t}else{\r\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif( adjacent ){\r\n\t\t\t\tif( adjacent.classList.contains('active') ){\r\n\t\t\t\t\tself.removeActiveItem(last_active);\r\n\t\t\t\t}\r\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\r\n\t\t\t}\r\n\r\n\t\t// move caret to the left or right\r\n\t\t}else{\r\n\t\t\tself.moveCaret(direction);\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveCaret(direction:number){}\r\n\r\n\t/**\r\n\t * Get the last active item\r\n\t *\r\n\t */\r\n\tgetLastActive(direction?:number){\r\n\r\n\t\tlet last_active = this.control.querySelector('.last-active');\r\n\t\tif( last_active ){\r\n\t\t\treturn last_active;\r\n\t\t}\r\n\r\n\r\n\t\tvar result = this.control.querySelectorAll('.active');\r\n\t\tif( result ){\r\n\t\t\treturn getTail(result,direction);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the caret to the specified index.\r\n\t *\r\n\t * The input must be moved by leaving it in place and moving the\r\n\t * siblings, due to the fact that focus cannot be restored once lost\r\n\t * on mobile webkit devices\r\n\t *\r\n\t */\r\n\tsetCaret(new_pos:number) {\r\n\t\tthis.caretPos = this.items.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of item dom elements\r\n\t *\r\n\t */\r\n\tcontrolChildren():TomItem[]{\r\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\r\n\t}\r\n\r\n\t/**\r\n\t * Disables user input on the control. Used while\r\n\t * items are being asynchronously created.\r\n\t */\r\n\tlock() {\r\n\t\tthis.close();\r\n\t\tthis.isLocked = true;\r\n\t\tthis.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Re-enables user input on the control.\r\n\t */\r\n\tunlock() {\r\n\t\tthis.isLocked = false;\r\n\t\tthis.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Disables user input on the control completely.\r\n\t * While disabled, it cannot receive focus.\r\n\t */\r\n\tdisable() {\r\n\t\tvar self = this;\r\n\t\tself.input.disabled\t\t\t\t= true;\r\n\t\tself.control_input.disabled\t\t= true;\r\n\t\tself.focus_node.tabIndex\t\t= -1;\r\n\t\tself.isDisabled\t\t\t\t\t= true;\r\n\t\tself.lock();\r\n\t}\r\n\r\n\t/**\r\n\t * Enables the control so that it can respond\r\n\t * to focus and user input.\r\n\t */\r\n\tenable() {\r\n\t\tvar self = this;\r\n\t\tself.input.disabled\t\t\t\t= false;\r\n\t\tself.control_input.disabled\t\t= false;\r\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\r\n\t\tself.isDisabled\t\t\t\t\t= false;\r\n\t\tself.unlock();\r\n\t}\r\n\r\n\t/**\r\n\t * Completely destroys the control and\r\n\t * unbinds all event listeners so that it can\r\n\t * be garbage collected.\r\n\t */\r\n\tdestroy() {\r\n\t\tvar self = this;\r\n\t\tvar revertSettings = self.revertSettings;\r\n\r\n\t\tself.trigger('destroy');\r\n\t\tself.off();\r\n\t\tself.wrapper.remove();\r\n\t\tself.dropdown.remove();\r\n\r\n\t\tself.input.innerHTML = revertSettings.innerHTML;\r\n\t\tself.input.tabIndex = revertSettings.tabIndex;\r\n\r\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\r\n\r\n\t\tself._destroy();\r\n\r\n\t\tdelete self.input.tomselect;\r\n\t}\r\n\r\n\t/**\r\n\t * A helper method for rendering \"item\" and\r\n\t * \"option\" templates, given the data.\r\n\t *\r\n\t */\r\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\r\n\r\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this._render(templateName, data);\r\n\t}\r\n\r\n\t/**\r\n\t * _render() can be called directly when we know we don't want to hit the cache\r\n\t * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\r\n\t */\r\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\r\n\t\tvar value = '', id, html;\r\n\t\tconst self = this;\r\n\t\t\r\n\t\tif( templateName === 'option' || templateName == 'item' ){\r\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\r\n\t\t}\r\n\r\n\t\t// render markup\r\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\r\n\r\n\t\tif( html == null ){\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\thtml = getDom( html );\r\n\r\n\t\t// add mandatory attributes\r\n\t\tif (templateName === 'option' || templateName === 'option_create') {\r\n\r\n\t\t\tif( data[self.settings.disabledField] ){\r\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\r\n\t\t\t}else{\r\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\r\n\t\t\t}\r\n\r\n\t\t}else if (templateName === 'optgroup') {\r\n\t\t\tid = data.group[self.settings.optgroupValueField];\r\n\t\t\tsetAttr(html,{'data-group': id});\r\n\t\t\tif(data.group[self.settings.disabledField]) {\r\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (templateName === 'option' || templateName === 'item') {\r\n\t\t\tsetAttr(html,{'data-value': value });\r\n\r\n\r\n\t\t\t// make sure we have some classes if a template is overwritten\r\n\t\t\tif( templateName === 'item' ){\r\n\t\t\t\taddClasses(html,self.settings.itemClass);\r\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\r\n\t\t\t}else{\r\n\t\t\t\taddClasses(html,self.settings.optionClass);\r\n\t\t\t\tsetAttr(html,{\r\n\t\t\t\t\trole:'option',\r\n\t\t\t\t\tid:data.$id\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// update cache\r\n\t\t\t\tself.options[value].$div = html;\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Clears the render cache for a template. If\r\n\t * no template is given, clears all render\r\n\t * caches.\r\n\t *\r\n\t */\r\n\tclearCache():void{\r\n\r\n\t\titerate(this.options, (option, value)=>{\r\n\t\t\tif( option.$div ){\r\n\t\t\t\toption.$div.remove();\r\n\t\t\t\tdelete option.$div;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a value from item and option caches\r\n\t *\r\n\t */\r\n\tuncacheValue(value:string){\r\n\r\n\t\tconst option_el\t\t\t= this.getOption(value);\r\n\t\tif( option_el ) option_el.remove();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not to display the\r\n\t * create item prompt, given a user input.\r\n\t *\r\n\t */\r\n\tcanCreate( input:string ):boolean {\r\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\r\n\t *\r\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\r\n\t *\r\n\t * });\r\n\t */\r\n\thook( when:string, method:string, new_fn:any ){\r\n\t\tvar self = this;\r\n\t\tvar orig_method = self[method];\r\n\r\n\r\n\t\tself[method] = function(){\r\n\t\t\tvar result, result_new;\r\n\r\n\t\t\tif( when === 'after' ){\r\n\t\t\t\tresult = orig_method.apply(self, arguments);\r\n\t\t\t}\r\n\r\n\t\t\tresult_new = new_fn.apply(self, arguments );\r\n\r\n\t\t\tif( when === 'instead' ){\r\n\t\t\t\treturn result_new;\r\n\t\t\t}\r\n\r\n\t\t\tif( when === 'before' ){\r\n\t\t\t\tresult = orig_method.apply(self, arguments);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t};\r\n\r\n\t}\r\n\r\n};\r\n","/**\r\n * microplugin.js\r\n * Copyright (c) 2013 Brian Reavis & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Brian Reavis <brian@thirdroute.com>\r\n */\r\n\r\ntype TSettings = {\r\n\t[key:string]:any\r\n}\r\n\r\ntype TPlugins = {\r\n\tnames: string[],\r\n\tsettings: TSettings,\r\n\trequested: {[key:string]:boolean},\r\n\tloaded: {[key:string]:any}\r\n};\r\n\r\nexport type TPluginItem = {name:string,options:{}};\r\nexport type TPluginHash = {[key:string]:{}};\r\n\r\n\r\n\r\n\r\nexport default function MicroPlugin(Interface: any ){\r\n\r\n\tInterface.plugins = {};\r\n\r\n\treturn class extends Interface{\r\n\r\n\t\tpublic plugins:TPlugins = {\r\n\t\t\tnames     : [],\r\n\t\t\tsettings  : {},\r\n\t\t\trequested : {},\r\n\t\t\tloaded    : {}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Registers a plugin.\r\n\t\t *\r\n\t\t * @param {function} fn\r\n\t\t */\r\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\r\n\t\t\tInterface.plugins[name] = {\r\n\t\t\t\t'name' : name,\r\n\t\t\t\t'fn'   : fn\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Initializes the listed plugins (with options).\r\n\t\t * Acceptable formats:\r\n\t\t *\r\n\t\t * List (without options):\r\n\t\t *   ['a', 'b', 'c']\r\n\t\t *\r\n\t\t * List (with options):\r\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\r\n\t\t *\r\n\t\t * Hash (with options):\r\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\r\n\t\t *\r\n\t\t * @param {array|object} plugins\r\n\t\t */\r\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\r\n\t\t\tvar key, name;\r\n\t\t\tconst self  = this;\r\n\t\t\tconst queue:string[] = [];\r\n\r\n\t\t\tif (Array.isArray(plugins)) {\r\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\r\n\t\t\t\t\tif (typeof plugin === 'string') {\r\n\t\t\t\t\t\tqueue.push(plugin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\r\n\t\t\t\t\t\tqueue.push(plugin.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (plugins) {\r\n\t\t\t\tfor (key in plugins) {\r\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\r\n\t\t\t\t\t\tqueue.push(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile( name = queue.shift() ){\r\n\t\t\t\tself.require(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadPlugin(name:string) {\r\n\t\t\tvar self    = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\t\t\tvar plugin  = Interface.plugins[name];\r\n\r\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\r\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\r\n\t\t\t}\r\n\r\n\t\t\tplugins.requested[name] = true;\r\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\r\n\t\t\tplugins.names.push(name);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes a plugin.\r\n\t\t *\r\n\t\t */\r\n\t\trequire(name:string) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\r\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\r\n\t\t\t\tif (plugins.requested[name]) {\r\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\r\n\t\t\t\t}\r\n\t\t\t\tself.loadPlugin(name);\r\n\t\t\t}\r\n\r\n\t\t\treturn plugins.loaded[name];\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","latin_pat","accent_pat","accent_reg","RegExp","diacritic_patterns","latin_convert","convert_pat","Object","keys","join","code_points","asciifold","str","normalize","replace","toLowerCase","foreignletter","arrayToPattern","chars","glue","longest","a","Math","max","allSubstrings","input","result","substring","subresult","tmp","slice","charAt","unshift","diacriticRegexPoints","regex","undefined","diacritics","code_range","i","diacritic","String","fromCharCode","latin","patt","match","latin_chars","sort","b","pattern","map","sub_pat","l","hasOwnProperty","generateDiacritics","part","no_accent","composed_part","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","bind","get_field","id","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","JSON","parse","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","controlInput","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","addItem","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","$div","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","checkValidity","opts","empty_option","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","moveCaret","new_pos","from","destroy","templateName","hook","when","method","new_fn","orig_method","result_new"],"mappings":"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"}