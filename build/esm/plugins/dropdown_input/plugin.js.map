{"version":3,"file":"plugin.js","sources":["../../../../src/constants.ts","../../../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../../../node_modules/@orchidjs/sifter/lib/utils.ts","../../../../src/vanilla.ts","../../../../src/utils.ts","../../../../src/plugins/dropdown_input/plugin.ts"],"sourcesContent":["export const KEY_A\t\t\t\t= 65;\r\nexport const KEY_RETURN\t\t\t= 13;\r\nexport const KEY_ESC\t\t\t= 27;\r\nexport const KEY_LEFT\t\t\t= 37;\r\nexport const KEY_UP\t\t\t\t= 38;\r\nexport const KEY_RIGHT\t\t\t= 39;\r\nexport const KEY_DOWN\t\t\t= 40;\r\nexport const KEY_BACKSPACE\t\t= 8;\r\nexport const KEY_DELETE\t\t\t= 46;\r\nexport const KEY_TAB\t\t\t= 9;\r\n\r\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\r\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\r\n","\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'g');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'g');\n\n\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\" \",\n\t0:\"߀\",\n\tA:\"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\",\n\tAA:\"Ꜳ\",\n\tAE:\"ÆǼǢ\",\n\tAO:\"Ꜵ\",\n\tAU:\"Ꜷ\",\n\tAV:\"ꜸꜺ\",\n\tAY:\"Ꜽ\",\n\tB:\"ⒷＢḂḄḆɃƁ\",\n\tC:\"ⒸＣꜾḈĆCĈĊČÇƇȻ\",\n\tD:\"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ\",\n\tDh:\"Ð\",\n\tDZ:\"ǱǄ\",\n\tDz:\"ǲǅ\",\n\tE:\"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ\",\n\tF:\"ꝼⒻＦḞƑꝻ\",\n\tG:\"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ\",\n\tH:\"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\",\n\tI:\"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\",\n\tJ:\"ⒿＪĴɈȷ\",\n\tK:\"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\",\n\tL:\"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\",\n\tLJ:\"Ǉ\",\n\tLj:\"ǈ\",\n\tM:\"ⓂＭḾṀṂⱮƜϻ\",\n\tN:\"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ\",\n\tNJ:\"Ǌ\",\n\tNj:\"ǋ\",\n\tO:\"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\",\n\tOE:\"Œ\",\n\tOI:\"Ƣ\",\n\tOO:\"Ꝏ\",\n\tOU:\"Ȣ\",\n\tP:\"ⓅＰṔṖƤⱣꝐꝒꝔ\",\n\tQ:\"ⓆＱꝖꝘɊ\",\n\tR:\"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ\",\n\tS:\"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\",\n\tT:\"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\",\n\tTh:\"Þ\",\n\tTZ:\"Ꜩ\",\n\tU:\"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\",\n\tV:\"ⓋＶṼṾƲꝞɅ\",\n\tVY:\"Ꝡ\",\n\tW:\"ⓌＷẀẂŴẆẄẈⱲ\",\n\tX:\"ⓍＸẊẌ\",\n\tY:\"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\",\n\tZ:\"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\",\n\ta:\"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ\",\n\taa:\"ꜳ\",\n\tae:\"æǽǣ\",\n\tao:\"ꜵ\",\n\tau:\"ꜷ\",\n\tav:\"ꜹꜻ\",\n\tay:\"ꜽ\",\n\tb:\"ⓑｂḃḅḇƀƃɓƂ\",\n\tc:\"ｃⓒćĉċčçḉƈȼꜿↄ\",\n\td:\"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ\",\n\tdh:\"ð\",\n\tdz:\"ǳǆ\",\n\te:\"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ\",\n\tf:\"ⓕｆḟƒ\",\n\tff:\"ﬀ\",\n\tfi:\"ﬁ\",\n\tfl:\"ﬂ\",\n\tffi:\"ﬃ\",\n\tffl:\"ﬄ\",\n\tg:\"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ\",\n\th:\"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\",\n\thv:\"ƕ\",\n\ti:\"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\",\n\tj:\"ⓙｊĵǰɉ\",\n\tk:\"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\",\n\tl:\"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ\",\n\tlj:\"ǉ\",\n\tm:\"ⓜｍḿṁṃɱɯ\",\n\tn:\"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ\",\n\tnj:\"ǌ\",\n\to:\"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ\",\n\toe:\"œ\",\n\toi:\"ƣ\",\n\too:\"ꝏ\",\n\tou:\"ȣ\",\n\tp:\"ⓟｐṕṗƥᵽꝑꝓꝕρ\",\n\tq:\"ⓠｑɋꝗꝙ\",\n\tr:\"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\",\n\ts:\"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ\",\n\tss:\"ß\",\n\tt:\"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\",\n\tth:\"þ\",\n\ttz:\"ꜩ\",\n\tu:\"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\",\n\tv:\"ⓥｖṽṿʋꝟʌ\",\n\tvy:\"ꝡ\",\n\tw:\"ⓦｗẁẃŵẇẅẘẉⱳ\",\n\tx:\"ⓧｘẋẍ\",\n\ty:\"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\",\n\tz:\"ⓩｚźẑżžẓẕƶȥɀⱬꝣ\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nexport const code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter];\n\t\t});\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n\tchar_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n\t\treturn accumulator;\n\t}, accumulator);\n\n}\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\t\n\tif( chars.length == 1 ){\n\t\treturn chars[0];\n\t}\n\t\n\tvar longest = 1;\n\tchars.forEach((a)=>{longest = Math.max(longest,a.length)});\n\n\tif( longest == 1 ){\n\t\treturn '['+chars.join('')+']';\n\t}\n\n\treturn '(?:'+chars.join(glue)+')';\t\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    \n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\t\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\t\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\n\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = [latin];\n\t\t\t}\n\t\t\t\n\t\t\tvar patt = new RegExp( arrayToPattern(diacritics[latin]),'iu');\n\t\t\tif( diacritic.match(patt) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tdiacritics[latin].push(diacritic);\n\t\t}\n\t});\n\t\t\n\tvar latin_chars = Object.keys(diacritics);\n\t\n\t\n\t// latin character pattern\n\t// match longer substrings first\n\tlatin_chars\t\t= latin_chars.sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ arrayToPattern(latin_chars) + accent_pat + '*)','g');\n\t\n\t\n\t// build diacritic patterns\n\t// ae needs: \n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\t\t\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\t\t\t\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn arrayToPattern(diacritics[l]);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\t\t\t\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\t\t\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\t\t\n\t});\n\t\t\t\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics();\n\t}\n\t\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\t\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\t\t\n\t\tif( part == '' ){\n\t\t\treturn '';\n\t\t}\n\t\t\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\t\t\t\t\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\t\t\n\t\t// 'أهلا' (\\u{623}\\u{647}\\u{644}\\u{627}) or 'أهلا' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\t\tconst composed_part = part.normalize('NFC');\n\t\tif( composed_part != part ){\n\t\t\treturn arrayToPattern([part,composed_part]);\n\t\t}\n\t\t\t\t\n\t\treturn part;\n\t}).join('');\n\t\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\t\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\t\n\tif( typeof value == 'function' ) return value;\n\t\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\r\nimport { iterate } from '@orchidjs/sifter/lib/utils';\r\n\r\n/**\r\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\r\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\r\n *\r\n * param query should be {}\r\n */\r\nexport const getDom = ( query:any ):HTMLElement => {\r\n\r\n\tif( query.jquery ){\r\n\t\treturn query[0];\r\n\t}\r\n\r\n\tif( query instanceof HTMLElement ){\r\n\t\treturn query;\r\n\t}\r\n\r\n\tif( query.indexOf('<') > -1 ){\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\r\n\t\treturn div.firstChild as HTMLElement;\r\n\t}\r\n\r\n\treturn document.querySelector(query);\r\n};\r\n\r\nexport const escapeQuery = (query:string):string => {\r\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Dispatch an event\r\n *\r\n */\r\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\r\n\tvar event = document.createEvent('HTMLEvents');\r\n\tevent.initEvent(event_name, true, false);\r\n\tdom_el.dispatchEvent(event)\r\n};\r\n\r\n/**\r\n * Apply CSS rules to a dom element\r\n *\r\n */\r\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\r\n\tObject.assign(dom_el.style, css);\r\n}\r\n\r\n\r\n/**\r\n * Add css classes\r\n *\r\n */\r\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n\tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map( cls => {\r\n\t\t\tel.classList.add( cls );\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Remove css classes\r\n *\r\n */\r\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n \tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map(cls => {\r\n\t \t\tel.classList.remove( cls );\r\n\t\t});\r\n \t});\r\n }\r\n\r\n\r\n/**\r\n * Return arguments\r\n *\r\n */\r\nexport const classesArray = (args:string[]|string[][]):string[] => {\r\n\tvar classes:string[] = [];\r\n\titerate( args, (_classes) =>{\r\n\t\tif( typeof _classes === 'string' ){\r\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\r\n\t\t}\r\n\t\tif( Array.isArray(_classes) ){\r\n\t\t\tclasses = classes.concat(_classes);\r\n\t\t}\r\n\t});\r\n\r\n\treturn classes.filter(Boolean);\r\n}\r\n\r\n\r\n/**\r\n * Create an array from arg if it's not already an array\r\n *\r\n */\r\nexport const castAsArray = (arg:any):Array<any> => {\r\n\tif( !Array.isArray(arg) ){\r\n \t\targ = [arg];\r\n \t}\r\n\treturn arg;\r\n}\r\n\r\n\r\n/**\r\n * Get the closest node to the evt.target matching the selector\r\n * Stops at wrapper\r\n *\r\n */\r\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\r\n\r\n\tif( wrapper && !wrapper.contains(target) ){\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile( target && target.matches ){\r\n\r\n\t\tif( target.matches(selector) ){\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\ttarget = target.parentNode as HTMLElement;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get the first or last item from an array\r\n *\r\n * > 0 - right (last)\r\n * <= 0 - left (first)\r\n *\r\n */\r\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\r\n\r\n\tif( direction > 0 ){\r\n\t\treturn list[list.length-1];\r\n\t}\r\n\r\n\treturn list[0];\r\n}\r\n\r\n/**\r\n * Return true if an object is empty\r\n *\r\n */\r\nexport const isEmptyObject = (obj:object):boolean => {\r\n\treturn (Object.keys(obj).length === 0);\r\n}\r\n\r\n\r\n/**\r\n * Get the index of an element amongst sibling nodes of the same type\r\n *\r\n */\r\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\r\n\tif (!el) return -1;\r\n\r\n\tamongst = amongst || el.nodeName;\r\n\r\n\tvar i = 0;\r\n\twhile( el = el.previousElementSibling ){\r\n\r\n\t\tif( el.matches(amongst) ){\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n\r\n/**\r\n * Set attributes of an element\r\n *\r\n */\r\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\r\n\titerate( attrs,(val,attr) => {\r\n\t\tif( val == null ){\r\n\t\t\tel.removeAttribute(attr as string);\r\n\t\t}else{\r\n\t\t\tel.setAttribute(attr as string, ''+val);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Replace a node\r\n */\r\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\r\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\r\n}\r\n","\r\nimport TomSelect from './tom-select';\r\nimport { TomLoadCallback } from './types/index';\r\n\r\n\r\n/**\r\n * Converts a scalar to its best string representation\r\n * for hash keys and HTML attribute values.\r\n *\r\n * Transformations:\r\n *   'str'     -> 'str'\r\n *   null      -> ''\r\n *   undefined -> ''\r\n *   true      -> '1'\r\n *   false     -> '0'\r\n *   0         -> '0'\r\n *   1         -> '1'\r\n *\r\n */\r\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\r\n\tif (typeof value === 'undefined' || value === null) return null;\r\n\treturn get_hash(value);\r\n};\r\n\r\nexport const get_hash = (value:boolean|string):string => {\r\n\tif (typeof value === 'boolean') return value ? '1' : '0';\r\n\treturn value + '';\r\n};\r\n\r\n/**\r\n * Escapes a string for use within HTML.\r\n *\r\n */\r\nexport const escape_html = (str:string):string => {\r\n\treturn (str + '')\r\n\t\t.replace(/&/g, '&amp;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;')\r\n\t\t.replace(/\"/g, '&quot;');\r\n};\r\n\r\n\r\n/**\r\n * Debounce the user provided load function\r\n *\r\n */\r\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\r\n\tvar timeout: null|ReturnType<typeof setTimeout>;\r\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\r\n\t\tvar self = this;\r\n\r\n\t\tif( timeout ){\r\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\r\n\t\t\tclearTimeout(timeout);\r\n\t\t}\r\n\t\ttimeout = setTimeout(function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tself.loadedSearches[value] = true;\r\n\t\t\tfn.call(self, value, callback);\r\n\r\n\t\t}, delay);\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Debounce all fired events types listed in `types`\r\n * while executing the provided `fn`.\r\n *\r\n */\r\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\r\n\tvar type:string;\r\n\tvar trigger = self.trigger;\r\n\tvar event_args:{ [key: string]: any } = {};\r\n\r\n\t// override trigger method\r\n\tself.trigger = function(){\r\n\t\tvar type = arguments[0];\r\n\t\tif (types.indexOf(type) !== -1) {\r\n\t\t\tevent_args[type] = arguments;\r\n\t\t} else {\r\n\t\t\treturn trigger.apply(self, arguments);\r\n\t\t}\r\n\t};\r\n\r\n\t// invoke provided function\r\n\tfn.apply(self, []);\r\n\tself.trigger = trigger;\r\n\r\n\t// trigger queued events\r\n\tfor (type in event_args) {\r\n\t\ttrigger.apply(self, event_args[type]);\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Determines the current selection within a text input control.\r\n * Returns an object containing:\r\n *   - start\r\n *   - length\r\n *\r\n */\r\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\r\n\treturn {\r\n\t\tstart\t: input.selectionStart || 0,\r\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Prevent default\r\n *\r\n */\r\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\r\n\tif( evt ){\r\n\t\tevt.preventDefault();\r\n\t\tif( stop ){\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Prevent default\r\n *\r\n */\r\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\r\n\ttarget.addEventListener(type,callback,options);\r\n};\r\n\r\n\r\n/**\r\n * Return true if the requested key is down\r\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\r\n * The current evt may not always set ( eg calling advanceSelection() )\r\n *\r\n */\r\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\r\n\r\n\tif( !evt ){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif( !evt[key_name] ){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\r\n\r\n\tif( count === 1 ){\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n * Get the id of an element\r\n * If the id attribute is not set, set the attribute with the given id\r\n *\r\n */\r\nexport const getId = (el:Element,id:string) => {\r\n\tconst existing_id = el.getAttribute('id');\r\n\tif( existing_id ){\r\n\t\treturn existing_id;\r\n\t}\r\n\r\n\tel.setAttribute('id',id);\r\n\treturn id;\r\n};\r\n\r\n\r\n/**\r\n * Returns a string with backslashes added before characters that need to be escaped.\r\n */\r\nexport const addSlashes = (str:string):string => {\r\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\r\n\tif( node ) parent.append(node);\r\n};\r\n","/**\r\n * Plugin: \"dropdown_input\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport TomSelect from '../../tom-select';\r\nimport * as constants from '../../constants';\r\nimport { getDom, addClasses } from '../../vanilla';\r\nimport { addEvent, preventDefault } from '../../utils';\r\n\r\n\r\nexport default function(this:TomSelect) {\r\n\tvar self = this;\r\n\r\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\r\n\r\n\tself.hook('before','setup',()=>{\r\n\t\tself.focus_node\t\t= self.control;\r\n\r\n\t\taddClasses( self.control_input, 'dropdown-input');\r\n\r\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\r\n\t\tdiv.append(self.control_input);\r\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\r\n\t});\r\n\r\n\r\n\tself.on('initialize',()=>{\r\n\r\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\r\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\r\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\r\n\t\t\tswitch( evt.keyCode ){\r\n\t\t\t\tcase constants.KEY_ESC:\r\n\t\t\t\t\tif (self.isOpen) {\r\n\t\t\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t\t\t\tself.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.clearActiveItems();\r\n\t\t\t\treturn;\r\n\t\t\t\tcase constants.KEY_TAB:\r\n\t\t\t\t\tself.focus_node.tabIndex = -1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn self.onKeyDown.call(self,evt);\r\n\t\t});\r\n\r\n\t\tself.on('blur',()=>{\r\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\r\n\t\t});\r\n\r\n\r\n\t\t// give the control_input focus when the dropdown is open\r\n\t\tself.on('dropdown_open',() =>{\r\n\t\t\tself.control_input.focus();\r\n\t\t});\r\n\r\n\t\t// prevent onBlur from closing when focus is on the control_input\r\n\t\tconst orig_onBlur = self.onBlur;\r\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\r\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\r\n\t\t\treturn orig_onBlur.call(self);\r\n\t\t});\r\n\r\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\r\n\r\n\t\t// return focus to control to allow further keyboard input\r\n\t\tself.hook('before','close',() =>{\r\n\r\n\t\t\tif( !self.isOpen ) return;\r\n\t\t\tself.focus_node.focus();\r\n\t\t});\r\n\r\n\t});\r\n\r\n};\r\n"],"names":["KEY_ESC","KEY_TAB","navigator","test","userAgent","latin_convert","RegExp","Object","keys","join","iterate","object","callback","Array","isArray","forEach","key","hasOwnProperty","getDom","query","jquery","HTMLElement","indexOf","div","document","createElement","innerHTML","trim","firstChild","querySelector","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","map","el","cls","classList","add","args","_classes","split","concat","filter","Boolean","arg","preventDefault","evt","stop","stopPropagation","addEvent","target","type","options","addEventListener","self","settings","shouldOpen","hook","focus_node","control","control_input","append","dropdown","insertBefore","on","keyCode","constants","isOpen","close","clearActiveItems","tabIndex","onKeyDown","call","isDisabled","focus","orig_onBlur","onBlur","relatedTarget"],"mappings":"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"}